{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Downloads/DASS/2019101092/2019101092_assign1/frontend/src/components/Users/Items/JobStatus.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from \"react-dom\";\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport { validateFields } from '../../Common/Validation'; // import PopUpInput from './PopUpInput'\n\nimport SimplePortal from '../PopUpInput';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nclass JobStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRatingChange = event => {\n      this.setState({\n        rating: event.target.value\n      });\n    };\n\n    this.state = {\n      showComponent: false,\n      rating: \"1\"\n    }; // console.log(\"in JobElement\");\n\n    this.status = '';\n    this.doj = React.createElement(\"label\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Not Applicable\");\n    this.rate_me = React.createElement(\"label\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Not Applicable\");\n    this.onClickRate = this.onClickRate.bind(this);\n  }\n\n  onClickRate() {\n    console.log(this.state.rating);\n    const Sending = {\n      email: this.props.email,\n      rating: this.state.rating,\n      id: this.props.job._id\n    };\n    axios.post(\"http://localhost:4000/job/ratejob\", Sending).then(res => {// console.log(res);\n      // console.log(res.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    window.location.reload();\n  } // function \n\n\n  render() {\n    var current_time = {\n      date: new Date().getDate(),\n      //To get the Current Date\n      month: new Date().getMonth() + 1,\n      //To get the Current Month\n      year: new Date().getFullYear(),\n      //To get the Current Year\n      hours: new Date().getHours(),\n      //To get the Current Hours\n      min: new Date().getMinutes()\n    };\n    var time_array = this.props.job.deadline.split(\"-\");\n    var deadline_met = false;\n    if (current_time.year < time_array[0]) deadline_met = true;else if (current_time.year > time_array[0]) deadline_met = false;else if (current_time.month > time_array[1]) deadline_met = false;else if (current_time.month < time_array[1]) deadline_met = true;else if (current_time.date > time_array[2]) deadline_met = false;else if (current_time.date < time_array[2]) deadline_met = true;else if (current_time.hour > time_array[3]) deadline_met = false;else if (current_time.hour < time_array[3]) deadline_met = true;else if (current_time.minute > time_array[4]) deadline_met = false;else if (current_time.minute < time_array[4]) deadline_met = true; //console.log(this.props);\n\n    if (this.props.job.accepted.includes(this.props.email)) {\n      this.rate_me = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"rating\",\n        onChange: this.handleRatingChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"5\")), React.createElement(Button, {\n        color: \"primary\",\n        size: \"small\",\n        onClick: this.onClickRate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Submit Rating\"));\n      this.props.job.has_rated.map(item => {\n        if (item.email === this.props.email) {\n          this.rate_me = item.rating;\n        }\n      });\n      this.status = React.createElement(\"label\", {\n        style: {\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \" Accepted\");\n      this.props.job.doj.map(item => {\n        if (item.email === this.props.email) {\n          this.doj = React.createElement(\"label\", {\n            style: {\n              color: 'green'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, item.date);\n        }\n      });\n    } else if (this.props.job.rejected.includes(this.props.email) || !deadline_met) {\n      this.status = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Rejected\");\n    } else if (deadline_met) {\n      if (this.props.job.applicants.includes(this.props.email)) this.status = React.createElement(\"label\", {\n        style: {\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \" Applied\");else this.status = React.createElement(\"label\", {\n        style: {\n          color: 'orange'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \" Shortlisted\");\n    }\n\n    return React.createElement(TableRow, {\n      key: this.props.job._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.props.job.title), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.props.job.salary), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.doj), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.props.job.name), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.status), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.rate_me));\n  }\n\n}\n\nexport default JobStatus;","map":{"version":3,"sources":["/home/kevin/Downloads/DASS/2019101092/2019101092_assign1/frontend/src/components/Users/Items/JobStatus.js"],"names":["React","Component","ReactDOM","Card","axios","validateFields","SimplePortal","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Paper","JobStatus","constructor","props","handleRatingChange","event","setState","rating","target","value","state","showComponent","status","doj","color","rate_me","onClickRate","bind","console","log","Sending","email","id","job","_id","post","then","res","catch","error","window","location","reload","render","current_time","date","Date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","time_array","deadline","split","deadline_met","hour","minute","accepted","includes","has_rated","map","item","rejected","applicants","title","salary","name"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\nimport ReactDOM from \"react-dom\"\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport { validateFields } from '../../Common/Validation';\n// import PopUpInput from './PopUpInput'\nimport SimplePortal from '../PopUpInput'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\n\nclass JobStatus extends Component {\n    \n\n    constructor(props) {\n        super(props);\n        this.state = {\n           showComponent: false,\n           rating:\"1\"\n        };\n        // console.log(\"in JobElement\");\n        this.status= '';\n        this.doj=<label style={{ color: 'red' }}>Not Applicable</label>\n        this.rate_me=<label style={{ color: 'red' }}>Not Applicable</label>\n        this.onClickRate=this.onClickRate.bind(this)\n    }\n\n    \n    handleRatingChange =(event) =>{\n        this.setState({rating:event.target.value})\n    }\n    onClickRate(){\n        console.log(this.state.rating)\n        const Sending={\n            email:this.props.email,\n            rating: this.state.rating,\n            id:this.props.job._id,\n        }\n        axios.post(\"http://localhost:4000/job/ratejob\",Sending)\n        .then(res => {\n            // console.log(res);\n            // console.log(res.data);\n            \n        })\n        .catch(function(error) {\n            console.log(error);\n        })\n        window.location.reload()\n    }\n    // function \n   \n        render(){\n            var current_time={\n                date : new Date().getDate(), //To get the Current Date\n                month : new Date().getMonth() + 1,//To get the Current Month\n                year : new Date().getFullYear(), //To get the Current Year\n                hours : new Date().getHours(), //To get the Current Hours\n                min : new Date().getMinutes(),\n           }\n           var time_array=this.props.job.deadline.split(\"-\");\n           var deadline_met=false;\n           if(current_time.year<time_array[0])\n               deadline_met=true;\n           else if(current_time.year>time_array[0])\n                   deadline_met=false;\n           else if(current_time.month>time_array[1])\n               deadline_met=false\n           else if(current_time.month<time_array[1])\n               deadline_met=true;\n               \n           else if(current_time.date>time_array[2])\n                   deadline_met=false\n           else if(current_time.date<time_array[2])\n                   deadline_met=true;\n   \n           else if(current_time.hour>time_array[3])\n                   deadline_met=false\n           else if(current_time.hour<time_array[3])\n                   deadline_met=true;\n   \n           else if(current_time.minute>time_array[4])\n                   deadline_met=false\n           else if(current_time.minute<time_array[4])\n                   deadline_met=true; \n            //console.log(this.props);\n            if(this.props.job.accepted.includes(this.props.email))\n            {   \n                this.rate_me=<div>\n                            <select name=\"rating\" onChange={this.handleRatingChange}>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                            </select> \n                            <Button color='primary' size='small' onClick={this.onClickRate}>Submit Rating</Button>\n                            </div>\n                this.props.job.has_rated.map(item =>{\n                    if(item.email===this.props.email)\n                    {\n                        this.rate_me=item.rating;\n                    }\n                })\n                this.status=<label style={{ color: 'green' }}> Accepted</label>\n                this.props.job.doj.map(item=> {\n                    if(item.email===this.props.email){\n                        this.doj=<label style={{ color: 'green' }}>{item.date}</label>\n                    }\n                })\n            }\n\n            else if(this.props.job.rejected.includes(this.props.email) || !deadline_met)\n            {\n                this.status=<label style={{ color: 'red' }}>Rejected</label>\n            }\n            else if(deadline_met)\n            {\n                if(this.props.job.applicants.includes(this.props.email))\n                    this.status=<label style={{ color: 'blue' }}> Applied</label>\n                else\n                    this.status=<label style={{ color: 'orange' }}> Shortlisted</label>\n            }\n\n            return(\n                <TableRow key={this.props.job._id}>\n                    <TableCell>{this.props.job.title}</TableCell>\n                    <TableCell align=\"right\">{this.props.job.salary}</TableCell>\n                    <TableCell align=\"right\">{this.doj}</TableCell>\n                    <TableCell align=\"right\">{this.props.job.name}</TableCell>\n                    <TableCell align=\"right\">{this.status}</TableCell>\n                    <TableCell align=\"right\">{this.rate_me}</TableCell>\n                    {/* {this.state.showComponent?<SimplePortal /> :\n                                            <div> <TableCell align=\"right\">{this.status}</TableCell>\n                                            <br/></div>\n                                            } */}\n                </TableRow>\n            )\n        }\n    }\n\nexport default JobStatus;"]},"metadata":{},"sourceType":"module"}