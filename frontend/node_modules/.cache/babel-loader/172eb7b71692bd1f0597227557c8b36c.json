{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Downloads/IIIT-H CSE/2-2/DASS/Assignment -1/2019101092_assign1/frontend/src/components/Recruiter/Lists/JobElement.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from \"react-dom\";\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport { validateFields } from '../../Common/Validation';\nimport classnames from 'classnames';\nimport ApplicantsList from '../Lists/CandidateTable';\nimport Button from '@material-ui/core/Button';\n\nclass JobElement extends Component {\n  // console.log(props);\n  constructor(props) {\n    super(props);\n    this.state = {\n      max_applicants: {\n        value: this.props.item.max_app,\n        validateOnChange: false,\n        error: ''\n      },\n      max_positions: {\n        value: this.props.item.max_pos,\n        validateOnChange: false,\n        error: ''\n      },\n      deadline: {\n        value: this.props.item.deadline,\n        validateOnChange: false,\n        error: ''\n      },\n      submitCalled: false,\n      allFieldsValidated: false,\n      myButton: false\n    };\n    this.onClickAccept = this.onClickAccept.bind(this);\n  }\n\n  onClickAccept(e) {\n    e.preventDefault();\n    this.props.onClickAccept(this.props.item);\n  }\n\n  handleBlur(validationFunc, evt) {\n    const field = evt.target.name; // validate onBlur only when validateOnChange for that field is false\n    // because if validateOnChange is already true there is no need to validate onBlur\n\n    if (this.state[field]['validateOnChange'] === false && this.state.submitCalled === false) {\n      this.setState(state => ({\n        [field]: { ...state[field],\n          validateOnChange: true,\n          error: validationFunc(state[field].value)\n        }\n      }));\n    }\n\n    return;\n  }\n\n  handleChange(validationFunc, evt) {\n    console.log(evt);\n    const field = evt.target.name;\n    const fieldVal = evt.target.value;\n    this.setState(state => ({\n      [field]: { ...state[field],\n        value: fieldVal,\n        error: state[field]['validateOnChange'] ? validationFunc(fieldVal) : ''\n      }\n    }));\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault(); // validate all fields\n    // console.log(this.state)\n\n    const {\n      deadline,\n      max_positions,\n      max_applicants\n    } = this.state;\n    const deadlineError = validateFields.validateBigDate(deadline.value);\n    const max_positionsError = validateFields.validateNumber(max_positions.value);\n    const max_applicantsError = validateFields.validateNumber(max_applicants.value);\n\n    if ([max_applicantsError, max_positionsError, deadlineError].every(e => e === false)) {\n      // console.log(skillarray);\n      const Sending = {\n        max_app: max_applicants.value,\n        max_pos: max_positions.value,\n        deadline: deadline.value,\n        id: this.props.item._id\n      };\n      axios.post('http://localhost:4000/job/editjobs', Sending).then(res => {\n        // alert( res.data);\n        if (max_positions.value == 0) {\n          // console.log(this.props.job.max_pos);\n          this.props.item.applicants.map(userboi => {\n            console.log(userboi);\n            const Sending1 = {\n              id: this.props.item._id,\n              email: userboi\n            };\n            axios.post(\"http://localhost:4000/job/rejectapp\", Sending1).then(res1 => {\n              console.log(\"yey rej\"); // this.user=res.data;\n\n              console.log(res1); // this.setState({isLoading: false});\n            }).catch(function (error) {\n              console.log(error);\n            });\n          });\n          this.props.item.shortlisted.map(userboi => {\n            if (userboi != this.props.user.email) {\n              const Sending1 = {\n                id: this.props.item._id,\n                email: userboi\n              };\n              axios.post(\"http://localhost:4000/job/rejectapp\", Sending1).then(res1 => {\n                console.log(res1); // this.user=res.data;\n                // console.log(this.user)\n                // this.setState({isLoading: false});\n              }).catch(function (error) {\n                console.log(error);\n              });\n            }\n          });\n        }\n\n        window.open(\"/recruiters/viewjobs\", \"_self\");\n      });\n      console.log(Sending);\n      this.setState({\n        max_applicants: '',\n        max_positions: '',\n        deadline: ''\n      }); //   this.setState({ ...initialState, allFieldsValidated: true });\n\n      this.showAllFieldsValidated(); // window.location.reload(false);\n      // window.open(\"/recruiters/recruiterprofile\",\"_self\");\n    } else {\n      // update the state with errors\n      this.setState(state => ({\n        max_positions: { ...state.max_positions,\n          validateOnChange: true,\n          error: max_positionsError\n        },\n        max_applicants: { ...state.max_applicants,\n          validateOnChange: true,\n          error: max_applicantsError\n        },\n        deadline: { ...state.deadline,\n          validateOnChange: true,\n          error: deadlineError\n        }\n      }));\n    }\n  }\n\n  render() {\n    const {\n      deadline,\n      max_applicants,\n      max_positions,\n      allFieldsValidated\n    } = this.state; // console.log(\"in JobElement\");\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.onClickAccept,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.props.item.title), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Date of posting: \", this.props.item.date), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: () => // console.log(\"hi there\");\n      axios.post('http://localhost:4000/job/deljob', {\n        id: this.props.item._id\n      }).then(res => {\n        // console.log(res.data);console.log(\"testing\");\n        window.open(\"/recruiters/viewjobs\", \"_self\");\n      }),\n      value: \"Delete Job\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: evt => this.handleSubmit(evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Application Slots Left: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"max_applicants\",\n      value: max_applicants.value,\n      placeholder: \"Max Applicants Allowed\",\n      className: classnames('form-control', {\n        'is-valid': max_applicants.error === false\n      }, {\n        'is-invalid': max_applicants.error\n      }),\n      onChange: evt => this.handleChange(validateFields.validateNumber, evt),\n      onBlur: evt => this.handleBlur(validateFields.validateNumber, evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, max_applicants.error)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Open Positions Remaining: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"max_positions\",\n      value: max_positions.value,\n      placeholder: \"Max Positions Available\",\n      className: classnames('form-control', {\n        'is-valid': max_positions.error === false\n      }, {\n        'is-invalid': max_positions.error\n      }),\n      onChange: evt => this.handleChange(validateFields.validateNumber, evt),\n      onBlur: evt => this.handleBlur(validateFields.validateNumber, evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, max_positions.error)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Deadline: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"deadline\",\n      value: deadline.value,\n      placeholder: \"Enter deadline in YYYY-MM-DD-HH-mm format\",\n      className: classnames('form-control', {\n        'is-valid': deadline.error === false\n      }, {\n        'is-invalid': deadline.error\n      }),\n      onChange: evt => this.handleChange(validateFields.validateBigDate, evt),\n      onBlur: evt => this.handleBlur(validateFields.validateBigDate, evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, deadline.error)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-secondary btn-block\",\n      onMouseDown: () => this.setState({\n        submitCalled: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Update Details\")))));\n  }\n\n}\n\nexport default JobElement;","map":{"version":3,"sources":["/home/kevin/Downloads/IIIT-H CSE/2-2/DASS/Assignment -1/2019101092_assign1/frontend/src/components/Recruiter/Lists/JobElement.js"],"names":["React","Component","ReactDOM","Card","axios","validateFields","classnames","ApplicantsList","Button","JobElement","constructor","props","state","max_applicants","value","item","max_app","validateOnChange","error","max_positions","max_pos","deadline","submitCalled","allFieldsValidated","myButton","onClickAccept","bind","e","preventDefault","handleBlur","validationFunc","evt","field","target","name","setState","handleChange","console","log","fieldVal","handleSubmit","deadlineError","validateBigDate","max_positionsError","validateNumber","max_applicantsError","every","Sending","id","_id","post","then","res","applicants","map","userboi","Sending1","email","res1","catch","shortlisted","user","window","open","showAllFieldsValidated","render","width","title","date"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from \"react-dom\"\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport { validateFields } from '../../Common/Validation';\nimport classnames from 'classnames';\nimport ApplicantsList from '../Lists/CandidateTable'\nimport Button from '@material-ui/core/Button';\n\nclass JobElement extends Component{\n    // console.log(props);\n    constructor(props) {\n        super(props);\n        this.state = {\n \n            max_applicants:{\n                value:this.props.item.max_app,\n                validateOnChange:false,\n                error: ''\n            },\n            max_positions:{\n                value:this.props.item.max_pos,\n                validateOnChange:false,\n                error: ''\n            },\n            deadline:{\n                value:this.props.item.deadline,\n                validateOnChange:false,\n                error: ''\n            },\n            submitCalled: false,\n            allFieldsValidated: false,\n            myButton:false\n          };\n          this.onClickAccept = this.onClickAccept.bind(this);\n        };\n\n        onClickAccept(e){\n          e.preventDefault();\n          this.props.onClickAccept(this.props.item)\n         }\n    handleBlur(validationFunc, evt) {\n            const field = evt.target.name;\n            // validate onBlur only when validateOnChange for that field is false\n            // because if validateOnChange is already true there is no need to validate onBlur\n            if (\n              this.state[field]['validateOnChange'] === false &&\n              this.state.submitCalled === false\n            ) {\n              this.setState(state => ({\n                [field]: {\n                  ...state[field],\n                  validateOnChange: true,\n                  error: validationFunc(state[field].value)\n                }\n              }));\n            }\n            return;\n          }\n\n        handleChange(validationFunc, evt) {\n        console.log(evt);\n        const field = evt.target.name;\n        const fieldVal = evt.target.value;\n        this.setState(state => ({\n            [field]: {\n            ...state[field],\n            value: fieldVal,\n            error: state[field]['validateOnChange'] ? validationFunc(fieldVal) : ''\n            }\n        }));\n        }\n        handleSubmit(evt) {\n            evt.preventDefault();\n            // validate all fields\n            // console.log(this.state)\n            const {deadline,max_positions,max_applicants} = this.state;\n            const deadlineError = validateFields.validateBigDate(deadline.value);\n            const max_positionsError = validateFields.validateNumber(max_positions.value);\n            const max_applicantsError = validateFields.validateNumber(max_applicants.value);\n            if ([max_applicantsError,max_positionsError,deadlineError].every(e => e === false)) {\n              \n           \n              \n              // console.log(skillarray);\n              const Sending = {\n            \n                  max_app:max_applicants.value,\n                  max_pos:max_positions.value,\n                  deadline:deadline.value,\n                  id:this.props.item._id\n              }\n\n              \n             \n              axios.post('http://localhost:4000/job/editjobs', Sending)\n                .then(res => {\n                    // alert( res.data);\n                    if(max_positions.value == 0){\n                        // console.log(this.props.job.max_pos);\n                        this.props.item.applicants.map(userboi => {\n                            console.log(userboi);\n                            const Sending1 = {\n                                id: this.props.item._id,\n                                email: userboi\n                            }\n                            axios.post(\"http://localhost:4000/job/rejectapp\",Sending1)\n                                .then(res1=>{\n                                    console.log(\"yey rej\")\n                                    // this.user=res.data;\n                                    console.log(res1)\n                                    // this.setState({isLoading: false});\n                                })\n                                .catch(function(error){\n                                    console.log(error);\n                                })\n                        });\n\n                        this.props.item.shortlisted.map(userboi => {\n                            if(userboi != this.props.user.email){\n                                const Sending1 = {\n                                    id: this.props.item._id,\n                                    email: userboi\n                                }\n                                axios.post(\"http://localhost:4000/job/rejectapp\",Sending1)\n                                    .then(res1=>{\n                                        console.log(res1)\n                                        // this.user=res.data;\n                                        // console.log(this.user)\n                                        // this.setState({isLoading: false});\n                                    })\n                                    .catch(function(error){\n                                        console.log(error);\n                                    })\n                            }\n                        });\n                    }\n                    window.open(\"/recruiters/viewjobs\",\"_self\");\n                });\n\n               console.log(Sending);\n               this.setState({\n                max_applicants:'',\n                max_positions:'',\n                deadline:'',\n            });\n            //   this.setState({ ...initialState, allFieldsValidated: true });\n              \n              this.showAllFieldsValidated();\n              \n              // window.location.reload(false);\n              // window.open(\"/recruiters/recruiterprofile\",\"_self\");\n            } else {\n              // update the state with errors\n              this.setState(state => ({\n                max_positions: {\n                  ...state.max_positions,\n                  validateOnChange: true,\n                  error: max_positionsError\n                },\n                max_applicants: {\n                    ...state.max_applicants,\n                    validateOnChange: true,\n                    error: max_applicantsError\n                  },\n                  deadline: {\n                    ...state.deadline,\n                    validateOnChange: true,\n                    error: deadlineError\n                  },\n              }));\n            }\n          }\n    render()\n    {\n        const {  deadline,max_applicants,max_positions, allFieldsValidated } = this.state;\n        // console.log(\"in JobElement\");\n        return(\n          \n            <div>\n                <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                <Button color=\"primary\" onClick={this.onClickAccept}>{this.props.item.title}</Button>\n                    <Card.Text>\n                        Date of posting: {this.props.item.date}\n                        {/* <br /> */}\n                    </Card.Text>\n                    <div className=\"form-group\">\n                            <input type=\"submit\" onClick={()=>(\n                                                                // console.log(\"hi there\");\n                                                                axios.post('http://localhost:4000/job/deljob', {id: this.props.item._id})\n                                                                .then(res => {\n                                                                                // console.log(res.data);console.log(\"testing\");\n                                                                                window.open(\"/recruiters/viewjobs\",\"_self\");\n                                                                            })\n                                                                \n                                                                )} value=\"Delete Job\" className=\"btn btn-primary\"/>\n                    </div>\n                    <form onSubmit={evt => this.handleSubmit(evt)}>\n\n                    <div className=\"form-group\">\n                        <label>Application Slots Left: </label>\n                        <input \n                                type=\"text\" \n                                name=\"max_applicants\"\n                               value={max_applicants.value}\n                               placeholder=\"Max Applicants Allowed\"\n                               className={classnames(\n                                'form-control',\n                                { 'is-valid': max_applicants.error === false },\n                                { 'is-invalid': max_applicants.error }\n                              )}\n                              onChange={evt =>\n                                this.handleChange(validateFields.validateNumber, evt)\n                              }\n                              onBlur={evt =>\n                                this.handleBlur(validateFields.validateNumber, evt)\n                              }\n                            />\n                            <div className=\"invalid-feedback\">{max_applicants.error}</div>\n             \n                    </div>\n                    <div className=\"form-group\">\n                        <label>Open Positions Remaining: </label>\n                        <input \n                                type=\"text\" \n                                name=\"max_positions\"\n                               value={max_positions.value}\n                               placeholder=\"Max Positions Available\"\n                               className={classnames(\n                                'form-control',\n                                { 'is-valid': max_positions.error === false },\n                                { 'is-invalid': max_positions.error }\n                              )}\n                              onChange={evt =>\n                                this.handleChange(validateFields.validateNumber, evt)\n                              }\n                              onBlur={evt =>\n                                this.handleBlur(validateFields.validateNumber, evt)\n                              }\n                            />\n                            <div className=\"invalid-feedback\">{max_positions.error}</div>\n             \n                    </div>\n                    <div className=\"form-group\">\n                        <label>Deadline: </label>\n                        <input \n                                type=\"text\" \n                                name=\"deadline\"\n                               value={deadline.value}\n                               placeholder=\"Enter deadline in YYYY-MM-DD-HH-mm format\"\n                               className={classnames(\n                                'form-control',\n                                { 'is-valid': deadline.error === false },\n                                { 'is-invalid': deadline.error }\n                              )}\n                              onChange={evt =>\n                                this.handleChange(validateFields.validateBigDate, evt)\n                              }\n                              onBlur={evt =>\n                                this.handleBlur(validateFields.validateBigDate, evt)\n                              }\n                            />\n                            <div className=\"invalid-feedback\">{deadline.error}</div>\n             \n                    </div>\n                    \n\n                    <button\n                type=\"submit\"\n                className=\"btn btn-secondary btn-block\"\n                onMouseDown={() => this.setState({ submitCalled: true })}\n              >\n                Update Details\n              </button>\n                </form>\n                    {/* <Card.Link onClick={()=>(console.log(\"hi there\"))}>say hi</Card.Link>\n                    <Card.Link href=\"#\">Another Link</Card.Link> */}\n                </Card.Body>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default JobElement;\n"]},"metadata":{},"sourceType":"module"}