{"ast":null,"code":"var _jsxFileName = \"/home/bondu/esw-repo/frontend/src/components/Common/Home.js\";\nimport React, { Component, auto } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport axios from 'axios';\nimport { FcCancel } from \"react-icons/fc\";\nimport { FcApproval } from \"react-icons/fc\";\nimport { color } from 'd3-color';\nimport { interpolateRgb } from 'd3-interpolate'; // import React, { Component } from 'react';\n\nimport ReactDOM from 'react-dom';\nimport LiquidFillGauge from 'react-liquid-gauge';\nimport { Toast } from 'bootstrap';\nconst styles = {\n  height: auto,\n  width: auto,\n  textAlign: 'center',\n  rounded: true,\n  paddingTop: auto,\n  backgroundColor: '#76D8E3',\n  opacity: 0.8,\n  margin: 10,\n  fontSize: 40\n};\nlet y = \"Status of Motor: \";\nlet x = \"Water level in tank: \";\nlet resultx = 0;\nlet level = 100;\nlet total = 200; // function hash(s, M) {\n//     let sum = 0, mul = 1;\n//     for (let i = 0; i < s.length; i++) {\n//     //   mul = (i % 4 == 0) ? 1 : mul * 256;\n//         console.log(sum);\n//         console.log(s.charCodeAt(i));\n//       sum += s.charAt(i) * mul;\n//       console.log(sum);\n//     }\n//     console.log(Math.abs(sum) % M);\n//     return (Math.abs(sum) % M);\n//   }\n\nfunction hash(s, M) {\n  let sum = 0,\n      mul = 1;\n\n  for (let i = 0; i < s.length; i++) {\n    mul = i % 4 == 0 ? 1 : mul * 256;\n    sum += s.charCodeAt(i) * mul;\n  } // console.log(sum);\n\n\n  return Math.abs(sum) % M;\n}\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props); // this.logout = this.logout.bind(this);\n\n    this.state = {\n      level: 40,\n      value: level * 100 / total\n    };\n    this.startColor = '#6495ed';\n    this.endColor = '#dc143c';\n  }\n\n  // crimson\n  componentDidMount() {\n    axios.get('http://localhost:4000/test', {}).then(res => {\n      let data = res.data[\"m2m:cin\"].con;\n      console.log(res); // let data = \"/EF;2/\";\n      // console.log(data);\n      // data = data.substring(1, data.length-1);\n\n      data = data.split(';'); // console.log(data[0]+data[1]);\n\n      let hboi = hash(data[0] + data[1], 23);\n      console.log(hboi);\n\n      if (hboi == data[2]) {\n        this.x = this.x + parseInt(Number(\"0x\" + data[0]), 10); // console.log(parseInt(Number(\"0x\"+data[0]), 10));\n        // console.log(this.x);\n\n        if (data[1] == \"1\") this.y = this.y + \"Off\";else this.y = this.y + \"Running\";\n        this.setState({\n          x: \"hmm\"\n        });\n      } //   if(res.data==='Success')\n      //   {\n      //     // ReactDOM.render(<UserApp/>,document.getElementById(\"root\"));\n      //     // UserProfile.setName(email.value);\n      //     // const newSession = {\n      //     //   email: email.value\n      //     // }\n      //     // const newLink = {\n      //     //   pathname: \"/users/userprofile\",\n      //     //   name: email.value\n      //     // };\n      //     // ReactDOM.render(<Link to={newLink}> hi </Link>, document.getElementById(\"root\"));\n      //   }\n      //   else\n      //     alert( res.data);console.log(res.data);\n\n    });\n  }\n\n  render() {\n    const radius = 200;\n    const interpolate = interpolateRgb(this.startColor, this.endColor);\n    const fillColor = interpolate(this.state.value / 100);\n    const gradientStops = [{\n      key: '0%',\n      stopColor: color(fillColor).darker(0.5).toString(),\n      stopOpacity: 1,\n      offset: '0%'\n    }, {\n      key: '50%',\n      stopColor: fillColor,\n      stopOpacity: 0.75,\n      offset: '50%'\n    }, {\n      key: '100%',\n      stopColor: color(fillColor).brighter(0.5).toString(),\n      stopOpacity: 0.5,\n      offset: '100%'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, x, \" \", level, \"m\"), React.createElement(Paper, {\n      style: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, y, resultx == 0 ? 'OFF' : 'ON', resultx == 0 ? React.createElement(FcCancel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }) : React.createElement(FcApproval, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(LiquidFillGauge, {\n      style: {\n        margin: '0 auto'\n      },\n      width: radius * 2,\n      height: radius * 2,\n      value: this.state.value,\n      percent: \"%\",\n      textSize: 1,\n      textOffsetX: 0,\n      textOffsetY: 0,\n      textRenderer: props => {\n        const value = Math.round(props.value);\n        const radius = Math.min(props.height / 2, props.width / 2);\n        const textPixels = props.textSize * radius / 2;\n        const valueStyle = {\n          fontSize: textPixels\n        };\n        const percentStyle = {\n          fontSize: textPixels * 0.6\n        };\n        return React.createElement(\"tspan\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"tspan\", {\n          className: \"value\",\n          style: valueStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, value), React.createElement(\"tspan\", {\n          style: percentStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"kvein\", \" \"));\n      },\n      riseAnimation: true,\n      waveAnimation: true,\n      waveFrequency: 2,\n      waveAmplitude: 1,\n      gradient: true,\n      gradientStops: gradientStops,\n      circleStyle: {\n        fill: fillColor\n      },\n      waveStyle: {\n        fill: fillColor\n      },\n      textStyle: {\n        fill: color('#444').toString(),\n        fontFamily: 'Arial'\n      },\n      waveTextStyle: {\n        fill: color('#fff').toString(),\n        fontFamily: 'Arial'\n      } // onClick={() => {\n      //     this.setState({ value: Math.random() * 100 });\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })));\n  }\n\n} // ReactDOM.render(<App />, document.querySelector('#app'));","map":{"version":3,"sources":["/home/bondu/esw-repo/frontend/src/components/Common/Home.js"],"names":["React","Component","auto","BrowserRouter","Router","Route","Link","Button","Paper","axios","FcCancel","FcApproval","color","interpolateRgb","ReactDOM","LiquidFillGauge","Toast","styles","height","width","textAlign","rounded","paddingTop","backgroundColor","opacity","margin","fontSize","y","x","resultx","level","total","hash","s","M","sum","mul","i","length","charCodeAt","Math","abs","Home","constructor","props","state","value","startColor","endColor","componentDidMount","get","then","res","data","con","console","log","split","hboi","parseInt","Number","setState","render","radius","interpolate","fillColor","gradientStops","key","stopColor","darker","toString","stopOpacity","offset","brighter","round","min","textPixels","textSize","valueStyle","percentStyle","fill","fontFamily"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,IAA1B,QAAqC,OAArC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,cAAT,QAA+B,gBAA/B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,KAAT,QAAsB,WAAtB;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAEhB,IADM;AAEbiB,EAAAA,KAAK,EAAEjB,IAFM;AAGbkB,EAAAA,SAAS,EAAE,QAHE;AAIbC,EAAAA,OAAO,EAAE,IAJI;AAKbC,EAAAA,UAAU,EAAEpB,IALC;AAMbqB,EAAAA,eAAe,EAAE,SANJ;AAObC,EAAAA,OAAO,EAAE,GAPI;AAQbC,EAAAA,MAAM,EAAE,EARK;AASbC,EAAAA,QAAQ,EAAC;AATI,CAAf;AAWA,IAAIC,CAAC,GAAG,mBAAR;AACA,IAAIC,CAAC,GAAG,uBAAR;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AAChB,MAAIC,GAAG,GAAG,CAAV;AAAA,MAAaC,GAAG,GAAG,CAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAAC,CAACK,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjCD,IAAAA,GAAG,GAAIC,CAAC,GAAG,CAAJ,IAAS,CAAV,GAAe,CAAf,GAAmBD,GAAG,GAAG,GAA/B;AACAD,IAAAA,GAAG,IAAIF,CAAC,CAACM,UAAF,CAAaF,CAAb,IAAkBD,GAAzB;AACD,GALe,CAMhB;;;AACA,SAAQI,IAAI,CAACC,GAAL,CAASN,GAAT,IAAgBD,CAAxB;AACD;;AAEH,eAAe,MAAMQ,IAAN,SAAmBzC,SAAnB,CAA6B;AAExC0C,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AAFe,SAInBC,KAJmB,GAIX;AACNf,MAAAA,KAAK,EAAG,EADF;AAENgB,MAAAA,KAAK,EAAGhB,KAAK,GAAC,GAAN,GAAUC;AAFZ,KAJW;AAAA,SAQnBgB,UARmB,GAQN,SARM;AAAA,SASnBC,QATmB,GASR,SATQ;AAGlB;;AAMqB;AACtBC,EAAAA,iBAAiB,GAAG;AAGhBxC,IAAAA,KAAK,CAACyC,GAAN,CAAU,4BAAV,EAAwC,EAAxC,EAEaC,IAFb,CAEkBC,GAAG,IAAI;AACT,UAAIC,IAAI,GAAGD,GAAG,CAACC,IAAJ,CAAS,SAAT,EAAoBC,GAA/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAFS,CAGT;AACA;AACA;;AACAC,MAAAA,IAAI,GAAGA,IAAI,CAACI,KAAL,CAAW,GAAX,CAAP,CANS,CAOT;;AACA,UAAIC,IAAI,GAAG1B,IAAI,CAACqB,IAAI,CAAC,CAAD,CAAJ,GAAQA,IAAI,CAAC,CAAD,CAAb,EAAkB,EAAlB,CAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AACA,UAAGA,IAAI,IAAIL,IAAI,CAAC,CAAD,CAAf,EACA;AACI,aAAKzB,CAAL,GAAS,KAAKA,CAAL,GAAS+B,QAAQ,CAACC,MAAM,CAAC,OAAKP,IAAI,CAAC,CAAD,CAAV,CAAP,EAAuB,EAAvB,CAA1B,CADJ,CAEI;AACA;;AAEA,YAAGA,IAAI,CAAC,CAAD,CAAJ,IAAW,GAAd,EACI,KAAK1B,CAAL,GAAS,KAAKA,CAAL,GAAS,KAAlB,CADJ,KAGI,KAAKA,CAAL,GAAS,KAAKA,CAAL,GAAS,SAAlB;AACJ,aAAKkC,QAAL,CAAc;AAACjC,UAAAA,CAAC,EAAC;AAAH,SAAd;AACH,OArBQ,CAuBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACC,KA1Cb;AA4CC;;AAGLkC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,GAAf;AACE,UAAMC,WAAW,GAAGnD,cAAc,CAAC,KAAKkC,UAAN,EAAkB,KAAKC,QAAvB,CAAlC;AACA,UAAMiB,SAAS,GAAGD,WAAW,CAAC,KAAKnB,KAAL,CAAWC,KAAX,GAAmB,GAApB,CAA7B;AACA,UAAMoB,aAAa,GAAG,CAClB;AACIC,MAAAA,GAAG,EAAE,IADT;AAEIC,MAAAA,SAAS,EAAExD,KAAK,CAACqD,SAAD,CAAL,CAAiBI,MAAjB,CAAwB,GAAxB,EAA6BC,QAA7B,EAFf;AAGIC,MAAAA,WAAW,EAAE,CAHjB;AAIIC,MAAAA,MAAM,EAAE;AAJZ,KADkB,EAOlB;AACIL,MAAAA,GAAG,EAAE,KADT;AAEIC,MAAAA,SAAS,EAAEH,SAFf;AAGIM,MAAAA,WAAW,EAAE,IAHjB;AAIIC,MAAAA,MAAM,EAAE;AAJZ,KAPkB,EAalB;AACIL,MAAAA,GAAG,EAAE,MADT;AAEIC,MAAAA,SAAS,EAAExD,KAAK,CAACqD,SAAD,CAAL,CAAiBQ,QAAjB,CAA0B,GAA1B,EAA+BH,QAA/B,EAFf;AAGIC,MAAAA,WAAW,EAAE,GAHjB;AAIIC,MAAAA,MAAM,EAAE;AAJZ,KAbkB,CAAtB;AAoBA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEvD,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEW,CADF,OACME,KADN,MADQ,EAIR,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEb,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEU,CAFF,EAGOE,OAAO,IAAI,CAAX,GACD,KADC,GACK,IAJZ,EAKOA,OAAO,IAAI,CAAX,GACD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GACW,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANlB,CAJQ,EAaJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,eAAD;AACI,MAAA,KAAK,EAAE;AAAEJ,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,KAAK,EAAEsC,MAAM,GAAG,CAFpB;AAGI,MAAA,MAAM,EAAEA,MAAM,GAAG,CAHrB;AAII,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWC,KAJtB;AAKI,MAAA,OAAO,EAAC,GALZ;AAMI,MAAA,QAAQ,EAAE,CANd;AAOI,MAAA,WAAW,EAAE,CAPjB;AAQI,MAAA,WAAW,EAAE,CARjB;AASI,MAAA,YAAY,EAAGF,KAAD,IAAW;AACrB,cAAME,KAAK,GAAGN,IAAI,CAACkC,KAAL,CAAW9B,KAAK,CAACE,KAAjB,CAAd;AACA,cAAMiB,MAAM,GAAGvB,IAAI,CAACmC,GAAL,CAAS/B,KAAK,CAAC1B,MAAN,GAAe,CAAxB,EAA2B0B,KAAK,CAACzB,KAAN,GAAc,CAAzC,CAAf;AACA,cAAMyD,UAAU,GAAIhC,KAAK,CAACiC,QAAN,GAAiBd,MAAjB,GAA0B,CAA9C;AACA,cAAMe,UAAU,GAAG;AACfpD,UAAAA,QAAQ,EAAEkD;AADK,SAAnB;AAGA,cAAMG,YAAY,GAAG;AACjBrD,UAAAA,QAAQ,EAAEkD,UAAU,GAAG;AADN,SAArB;AAIA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAyB,UAAA,KAAK,EAAEE,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6ChC,KAA7C,CADJ,EAEI;AAAO,UAAA,KAAK,EAAEiC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CADJ;AAMH,OA1BL;AA2BI,MAAA,aAAa,MA3BjB;AA4BI,MAAA,aAAa,MA5BjB;AA6BI,MAAA,aAAa,EAAE,CA7BnB;AA8BI,MAAA,aAAa,EAAE,CA9BnB;AA+BI,MAAA,QAAQ,MA/BZ;AAgCI,MAAA,aAAa,EAAEb,aAhCnB;AAiCI,MAAA,WAAW,EAAE;AACTc,QAAAA,IAAI,EAAEf;AADG,OAjCjB;AAoCI,MAAA,SAAS,EAAE;AACPe,QAAAA,IAAI,EAAEf;AADC,OApCf;AAuCI,MAAA,SAAS,EAAE;AACPe,QAAAA,IAAI,EAAEpE,KAAK,CAAC,MAAD,CAAL,CAAc0D,QAAd,EADC;AAEPW,QAAAA,UAAU,EAAE;AAFL,OAvCf;AA2CI,MAAA,aAAa,EAAE;AACXD,QAAAA,IAAI,EAAEpE,KAAK,CAAC,MAAD,CAAL,CAAc0D,QAAd,EADK;AAEXW,QAAAA,UAAU,EAAE;AAFD,OA3CnB,CA+CI;AACA;AACA;AAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,CAbI,CADJ;AAqEH;;AA3JuC,C,CA8J5C","sourcesContent":["import React, {Component, auto} from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport axios from 'axios';\nimport { FcCancel } from \"react-icons/fc\";\nimport { FcApproval } from \"react-icons/fc\";\nimport { color } from 'd3-color';\nimport { interpolateRgb } from 'd3-interpolate';\n// import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport LiquidFillGauge from 'react-liquid-gauge';\nimport { Toast } from 'bootstrap';\n\nconst styles = {\n\theight: auto,\n  width: auto,\n  textAlign: 'center',\n  rounded: true,\n  paddingTop: auto,\n  backgroundColor: '#76D8E3',\n  opacity: 0.8,\n  margin: 10,\n  fontSize:40\n};\nlet y = \"Status of Motor: \";\nlet x = \"Water level in tank: \";\nlet resultx = 0;\nlet level = 100; \nlet total = 200; \n\n// function hash(s, M) {\n//     let sum = 0, mul = 1;\n//     for (let i = 0; i < s.length; i++) {\n//     //   mul = (i % 4 == 0) ? 1 : mul * 256;\n//         console.log(sum);\n//         console.log(s.charCodeAt(i));\n//       sum += s.charAt(i) * mul;\n//       console.log(sum);\n//     }\n//     console.log(Math.abs(sum) % M);\n//     return (Math.abs(sum) % M);\n//   }\n\nfunction hash(s, M) {\n    let sum = 0, mul = 1;\n    for (let i = 0; i < s.length; i++) {\n      mul = (i % 4 == 0) ? 1 : mul * 256;\n      sum += s.charCodeAt(i) * mul;\n    }\n    // console.log(sum);\n    return (Math.abs(sum) % M);\n  }\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        // this.logout = this.logout.bind(this);\n    }\n    state = {\n      level : 40,\n      value : level*100/total \n    };\n    startColor = '#6495ed'; // cornflowerblue\n    endColor = '#dc143c'; // crimson\n    componentDidMount() {\n\n      \n        axios.get('http://localhost:4000/test', {\n          })\n                    .then(res => {\n                        let data = res.data[\"m2m:cin\"].con;\n                        console.log(res);\n                        // let data = \"/EF;2/\";\n                        // console.log(data);\n                        // data = data.substring(1, data.length-1);\n                        data = data.split(';');\n                        // console.log(data[0]+data[1]);\n                        let hboi = hash(data[0]+data[1], 23);\n                        console.log(hboi);\n                        if(hboi == data[2])\n                        {\n                            this.x = this.x + parseInt(Number(\"0x\"+data[0]), 10);\n                            // console.log(parseInt(Number(\"0x\"+data[0]), 10));\n                            // console.log(this.x);\n                            \n                            if(data[1] == \"1\")\n                                this.y = this.y + \"Off\";\n                            else\n                                this.y = this.y + \"Running\";\n                            this.setState({x:\"hmm\"});\n                        }\n\n                    //   if(res.data==='Success')\n                    //   {\n                    //     // ReactDOM.render(<UserApp/>,document.getElementById(\"root\"));\n                    //     // UserProfile.setName(email.value);\n                    //     // const newSession = {\n                    //     //   email: email.value\n                    //     // }\n                    //     // const newLink = {\n                    //     //   pathname: \"/users/userprofile\",\n                    //     //   name: email.value\n                    //     // };\n                        \n                    //     // ReactDOM.render(<Link to={newLink}> hi </Link>, document.getElementById(\"root\"));\n                        \n                    //   }\n                    //   else\n                    //     alert( res.data);console.log(res.data);\n                    })\n                    ;\n        }\n\n\n    render() {\n      const radius = 200;\n        const interpolate = interpolateRgb(this.startColor, this.endColor);\n        const fillColor = interpolate(this.state.value / 100);\n        const gradientStops = [\n            {\n                key: '0%',\n                stopColor: color(fillColor).darker(0.5).toString(),\n                stopOpacity: 1,\n                offset: '0%'\n            },\n            {\n                key: '50%',\n                stopColor: fillColor,\n                stopOpacity: 0.75,\n                offset: '50%'\n            },\n            {\n                key: '100%',\n                stopColor: color(fillColor).brighter(0.5).toString(),\n                stopOpacity: 0.5,\n                offset: '100%'\n            }\n        ];\n        return (\n            <div>    \n\t\t\t\t<Paper style={styles}>\n\t\t\t\t\t{x} {level}m\n\t\t\t\t</Paper>\n\t\t\t\t<Paper style={styles}>\n\n\t\t\t\t\t{y}\n          {resultx == 0 ?\n          'OFF':'ON'}\n          {resultx == 0 ?\n          <FcCancel/>:<FcApproval/>}\n\t\t\t\t</Paper>\n            \n        <div>\n                <LiquidFillGauge\n                    style={{ margin: '0 auto' }}\n                    width={radius * 2}\n                    height={radius * 2}\n                    value={this.state.value}\n                    percent=\"%\"\n                    textSize={1}\n                    textOffsetX={0}\n                    textOffsetY={0}\n                    textRenderer={(props) => {\n                        const value = Math.round(props.value);\n                        const radius = Math.min(props.height / 2, props.width / 2);\n                        const textPixels = (props.textSize * radius / 2);\n                        const valueStyle = {\n                            fontSize: textPixels\n                        };\n                        const percentStyle = {\n                            fontSize: textPixels * 0.6\n                        };\n \n                        return (\n                            <tspan>\n                                <tspan className=\"value\" style={valueStyle}>{value}</tspan>\n                                <tspan style={percentStyle}>kvein{} </tspan>\n                            </tspan>\n                        );\n                    }}\n                    riseAnimation\n                    waveAnimation\n                    waveFrequency={2}\n                    waveAmplitude={1}\n                    gradient\n                    gradientStops={gradientStops}\n                    circleStyle={{\n                        fill: fillColor\n                    }}\n                    waveStyle={{\n                        fill: fillColor\n                    }}\n                    textStyle={{\n                        fill: color('#444').toString(),\n                        fontFamily: 'Arial'\n                    }}\n                    waveTextStyle={{\n                        fill: color('#fff').toString(),\n                        fontFamily: 'Arial'\n                    }}\n                    // onClick={() => {\n                    //     this.setState({ value: Math.random() * 100 });\n                    // }}\n                />\n            </div>\n            </div>\n        )\n    }\n}\n\n// ReactDOM.render(<App />, document.querySelector('#app'));"]},"metadata":{},"sourceType":"module"}