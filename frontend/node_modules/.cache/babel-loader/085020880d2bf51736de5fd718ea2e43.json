{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Downloads/DASS/2019101092/2019101092_assign1/frontend/src/components/Recruiter/Dashboards/CandidatePage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ApplicantsList from '../Lists/CandidateTable'; // import _\n\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nconst useStyles = makeStyles({\n  root: {\n    width: 300\n  }\n});\nconst type_to_number = {\n  \"Full-Time\": 'a',\n  \"Part-Time\": 'b',\n  \"Work From Home\": 'c'\n};\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nclass CandidatePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sortUsers = users => {\n      console.log(users); //uncomment date of application field in sorting and change variable name according to backend name\n\n      if (this.state.sortValue === \"Name\" && this.state.sortOrder === \"Ascending\") {\n        return [...users].sort((a, b) => {\n          console.log(a);\n          console.log(b);\n\n          if (a.name > b.name) {\n            return 1;\n          } else if (a.name < b.name) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Date Of Application\" && this.state.sortOrder === \"Ascending\") {\n        return [...users].sort((a, b) => {\n          if (this.dateMap[a.email] > this.dateMap[b.email]) {\n            return 1;\n          } else if (this.dateMap[a.email] < this.dateMap[b.email]) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Rating\" && this.state.sortOrder === \"Ascending\") {\n        return [...users].sort((a, b) => {\n          if (a.rating > b.rating) {\n            return 1;\n          } else if (a.rating < b.rating) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Name\" && this.state.sortOrder === \"Descending\") {\n        return [...users].sort((a, b) => {\n          if (a.name < b.name) {\n            return 1;\n          } else if (a.name > b.name) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Date of Application\" && this.state.sortOrder === \"Descending\") {\n        return [...users].sort((a, b) => {\n          if (this.dateMap[a.email] < this.dateMap[b.email]) {\n            return 1;\n          } else if (this.dateMap[a.email] > this.dateMap[b.email]) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Rating\" && this.state.sortOrder === \"Descending\") {\n        return [...users].sort((a, b) => {\n          if (a.rating < b.rating) {\n            return 1;\n          } else if (a.rating > b.rating) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else {\n        return users;\n      }\n    };\n\n    this.handleSortUsers = event => {\n      //  console.log(\"sort button\", this.state.sortValue)\n      this.setState({\n        sortValue: event.target.value\n      });\n    };\n\n    this.handleSortOrder = event => {\n      //  console.log(\"sort button\", this.state.sortValue)\n      this.setState({\n        sortOrder: event.target.value\n      });\n    };\n\n    this.state = {\n      sortValue: 'Name',\n      sortOrder: 'Ascending',\n      user: {},\n      isLoading: true\n    };\n    this.users = [];\n    this.dateMap = {};\n    this.sopMap = {}; // this.sortClicked = this.sortClicked.bind(this);\n    // this.renderIcon = this.renderIcon.bind(this);\n    // this.sortChange = this.sortChange.bind(this);\n    // this.email='';\n    // this.user=''\n  }\n\n  componentDidMount() {\n    // console.log(this.state.check_box)\n    // console.log(this.state.check_box[\"a\"])\n    // console.log(this.props)\n    axios.get(\"http://localhost:4000/user/\").then(res => {\n      // console.log(res);\n      console.log(res.data); // this.setState(\n      //     {users:res.data},\n      //     ()=>{console.log(\"IN CALLBACK\")\n      //     console.log(this.state.isLoading)\n      //     console.log(this.state.users)\n      //         this.setState({isLoading:false})}\n      //     );\n      // console.log(this.state.users)\n\n      this.users = res.data;\n      console.log(this.users);\n      this.setState({\n        isLoading: false\n      }); // this.setState({isLoading: false});\n      // console.log(this.email)                   \n    }).catch(function (error) {\n      console.log(error);\n    });\n    var index; // for (index = 0; index < this.props.job.doa.length(); ++index) {\n    // this.dateMap[this.props.job.doa[index].email] = this.props.job.doa[index].date;\n    // }\n\n    this.props.job.doa.map(mapboi => {\n      this.dateMap[mapboi.email] = mapboi.date;\n    });\n    this.props.job.sop.map(sopboi => {\n      this.sopMap[sopboi.email] = sopboi.text;\n    });\n    console.log(this.sopMap);\n  } // componentDidUpdate() {\n  //     axios.get('http://localhost:4000/user')\n  //          .then(response => {\n  //              this.setState({users: response.data});\n  //          })\n  //          .catch(function(error) {\n  //              console.log(error);\n  //          })        \n  // }\n\n\n  sortClicked() {\n    console.log(this.state);\n  }\n\n  LoadingDone() {\n    this.setState({\n      isLoading: !this.state.isLoading\n    });\n  }\n\n  renderIcon() {\n    if (this.state.sortName) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    // var ReactDualRangeSlider = require('react-dual-range-slider');\n    // console.log(this.state.big_limits + \" \" + this.state.salary_limits)\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      console.log(this.users);\n      console.log(this.users[0]);\n      console.log(typeof this.users);\n      const filteredUsers = this.users.filter(user => {\n        return this.props.job.applicants.includes(user.email) || this.props.job.shortlisted.includes(user.email);\n      });\n      console.log(filteredUsers);\n      console.log(this.sortUsers(filteredUsers));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Sort Options\"), React.createElement(\"select\", {\n        name: \"sortValue\",\n        onChange: this.handleSortUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"option\", {\n        value: \"Date Of Application\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Date Of Application\"), React.createElement(\"option\", {\n        value: \"Rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Rating\")), React.createElement(\"select\", {\n        name: \"sortOrder\",\n        onChange: this.handleSortOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Ascending\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Ascending\"), React.createElement(\"option\", {\n        value: \"Descending\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Descending\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(ApplicantsList, {\n        users: this.sortUsers(filteredUsers),\n        job: this.props.job,\n        onClickAccept: this.props.onClickAccept,\n        toggleDoUpdate: this.props.toggleDoUpdate,\n        doa: this.dateMap,\n        sop: this.sopMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default CandidatePage;","map":{"version":3,"sources":["/home/kevin/Downloads/DASS/2019101092/2019101092_assign1/frontend/src/components/Recruiter/Dashboards/CandidatePage.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","Slider","makeStyles","Typography","FormGroup","FormControlLabel","Checkbox","ApplicantsList","ArrowUpwardIcon","ArrowDownwardIcon","useStyles","root","width","type_to_number","valuetext","value","CandidatePage","constructor","props","sortUsers","users","console","log","state","sortValue","sortOrder","sort","a","b","name","dateMap","email","rating","handleSortUsers","event","setState","target","handleSortOrder","user","isLoading","sopMap","componentDidMount","get","then","res","data","catch","error","index","job","doa","map","mapboi","date","sop","sopboi","text","sortClicked","LoadingDone","renderIcon","sortName","render","filteredUsers","filter","applicants","includes","shortlisted","onClickAccept","toggleDoUpdate"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ApplicantsList from '../Lists/CandidateTable'\n// import _\n\n\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nconst useStyles = makeStyles({\n    root: {\n      width: 300,\n    },\n  });\n\nconst type_to_number={\"Full-Time\":'a',\"Part-Time\":'b',\"Work From Home\":'c'};\n\n  function valuetext(value) {\n    return `${value}`;\n  }\n\nclass CandidatePage extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n           sortValue: 'Name',\n           sortOrder: 'Ascending',\n           \n           user:{},\n           isLoading: true,\n        };\n        this.users=[];\n        this.dateMap = {};\n        this.sopMap = {};\n        // this.sortClicked = this.sortClicked.bind(this);\n        // this.renderIcon = this.renderIcon.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n        // this.email='';\n        // this.user=''\n    }\n\n    componentDidMount() {\n        // console.log(this.state.check_box)\n        // console.log(this.state.check_box[\"a\"])\n        // console.log(this.props)\n        axios.get(\"http://localhost:4000/user/\")\n             .then(res => {\n                    // console.log(res);\n                    console.log(res.data);\n                    // this.setState(\n                    //     {users:res.data},\n                    //     ()=>{console.log(\"IN CALLBACK\")\n                    //     console.log(this.state.isLoading)\n                    //     console.log(this.state.users)\n                    //         this.setState({isLoading:false})}\n                    //     );\n                    // console.log(this.state.users)\n                    this.users=res.data;\n                    console.log(this.users)\n                    this.setState({isLoading:false})\n                    // this.setState({isLoading: false});\n                    // console.log(this.email)                   \n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n             var index;\n        // for (index = 0; index < this.props.job.doa.length(); ++index) {\n            // this.dateMap[this.props.job.doa[index].email] = this.props.job.doa[index].date;\n        // }\n        this.props.job.doa.map( mapboi => {\n            this.dateMap[mapboi.email] = mapboi.date;\n        });\n        \n        this.props.job.sop.map( sopboi => {\n            this.sopMap[sopboi.email] = sopboi.text;\n        });\n        console.log(this.sopMap);\n             \n    }\n\n    // componentDidUpdate() {\n    //     axios.get('http://localhost:4000/user')\n    //          .then(response => {\n    //              this.setState({users: response.data});\n    //          })\n    //          .catch(function(error) {\n    //              console.log(error);\n    //          })        \n    // }\n\n    sortClicked(){\n        console.log(this.state);\n    }\n    LoadingDone(){\n        this.setState({isLoading:!this.state.isLoading})\n    }\n    sortUsers = (users) => {\n        console.log(users)\n        //uncomment date of application field in sorting and change variable name according to backend name\n        if(this.state.sortValue === \"Name\" && this.state.sortOrder === \"Ascending\") {\n            return [...users].sort((a,b) => {\n                console.log(a)\n                console.log(b)\n            if(a.name > b.name) {\n                return 1\n            }else if (a.name < b.name) {\n                return -1\n            }else {\n                return 0\n            }\n            })\n        }\n        else if(this.state.sortValue === \"Date Of Application\" && this.state.sortOrder === \"Ascending\") {\n                return [...users].sort((a,b) => {\n                if(this.dateMap[a.email] > this.dateMap[b.email]) {\n                    return 1\n                }else if (this.dateMap[a.email] < this.dateMap[b.email]) {\n                    return -1\n                }else {\n                    return 0\n                }\n            })\n        }\n        else if(this.state.sortValue === \"Rating\" && this.state.sortOrder === \"Ascending\") {\n                return [...users].sort((a,b) => {\n                if(a.rating > b.rating) {\n                    return 1\n                }else if (a.rating < b.rating) {\n                    return -1\n                }else {\n                    return 0\n                }\n            })\n        }\n        else if(this.state.sortValue === \"Name\" && this.state.sortOrder === \"Descending\") {\n            return [...users].sort((a,b) => {\n            if(a.name < b.name) {\n                return 1\n            }else if (a.name > b.name) {\n                return -1\n            }else {\n                return 0\n            }\n            })\n        }\n        else if(this.state.sortValue === \"Date of Application\" && this.state.sortOrder === \"Descending\") {\n                return [...users].sort((a,b) => {\n                if(this.dateMap[a.email] < this.dateMap[b.email]) {\n                    return 1\n                }else if (this.dateMap[a.email] > this.dateMap[b.email]) {\n                    return -1\n                }else {\n                    return 0\n                }\n            })\n        }\n        else if(this.state.sortValue === \"Rating\" && this.state.sortOrder === \"Descending\") {\n                return [...users].sort((a,b) => {\n                if(a.rating < b.rating) {\n                    return 1\n                }else if (a.rating > b.rating) {\n                    return -1\n                }else {\n                    return 0\n                }\n            })\n        }\n        else {\n            return users\n        }\n    }\n\n    renderIcon(){\n        if(this.state.sortName){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n    handleSortUsers = (event) => {\n    //  console.log(\"sort button\", this.state.sortValue)\n    this.setState({\n        sortValue: event.target.value\n    })\n    }\n\n    handleSortOrder = (event) => {\n    //  console.log(\"sort button\", this.state.sortValue)\n    this.setState({\n        sortOrder: event.target.value\n    })\n    }\n\n\n    render() {\n        // var ReactDualRangeSlider = require('react-dual-range-slider');\n        \n        // console.log(this.state.big_limits + \" \" + this.state.salary_limits)\n     \n        \n        if(this.state.isLoading){\n            return(\n                <div>\n                    Loading...\n                </div>\n            )\n        }\n        else{\n            console.log(this.users)\n            console.log(this.users[0])\n            console.log( typeof this.users)\n            const filteredUsers = \n            this.users.filter(user => {     \n                return ((this.props.job.applicants.includes(user.email))\n                || (this.props.job.shortlisted.includes(user.email))\n            )})\n            console.log(filteredUsers);\n            console.log(this.sortUsers(filteredUsers))\n            return (\n                <div>\n                    <label>Sort Options</label>\n                    <select name=\"sortValue\" onChange={this.handleSortUsers}>\n                        <option value=\"Name\">Name</option>\n                        <option value=\"Date Of Application\">Date Of Application</option>\n                        <option value=\"Rating\">Rating</option>\n                    </select> \n                    <select name=\"sortOrder\" onChange={this.handleSortOrder}>\n                        <option value=\"Ascending\">Ascending</option>\n                        <option value=\"Descending\">Descending</option>\n                    </select> \n                    <br/>\n                    \n                    \n                    < ApplicantsList users={this.sortUsers(filteredUsers)} job={this.props.job} onClickAccept={this.props.onClickAccept} toggleDoUpdate={this.props.toggleDoUpdate} doa={this.dateMap} sop={this.sopMap}/> \n                </div>\n            )\n        }\n    }\n}\n\nexport default CandidatePage;"]},"metadata":{},"sourceType":"module"}