{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Downloads/ESW/water-level-monitor/src/components/Recruiter/Dashboards/PostedJobs.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport { validateFields } from '../../Common/Validation';\nimport classnames from 'classnames';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"; // import \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport { DialogTitle } from '@material-ui/core';\nimport validator from 'validator';\nimport Card from 'react-bootstrap/Card';\nimport JobElement from '../Lists/JobElement';\nimport CandidatePage from './CandidatePage'; // const [isLoading, setLoading] = useState(true);\n\nclass PostedJobs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      do_update: true,\n      showComponent: false,\n      toSend: '',\n      jobsobj: []\n    }; // this.onChangeContact = this.onChangeContact.bind(this);\n    // this.onChangeBio = this.onChangeBio.bind(this);\n    // this.sortClicked = this.sortClicked.bind(this);\n    // this.renderIcon = this.renderIcon.bind(this);\n    // this.sortChange = this.sortChange.bind(this);\n    // this.email = '';\n\n    this.recruiter = '';\n    this.onClickAccept = this.onClickAccept.bind(this);\n    this.toggleDoUpdate = this.toggleDoUpdate.bind(this); // this.onUpdate = this.onUpdate.bind(this);\n    // this.notes = ['***'];\n    // const [this.isLoading, this.setLoading] = this.useState(true);\n  }\n\n  onClickAccept(props) {\n    this.setState({\n      showComponent: !this.state.showComponent,\n      toSend: props\n    });\n  } // JobElement (props){\n  //     return(\n  //         <div>\n  //             <Card style={{ width: '18rem' }}>\n  //             <Card.Body>\n  //                 <Card.Title>{props.item.title}</Card.Title>\n  //                 <Card.Subtitle className=\"mb-2 text-muted\">Complete By: {props.item.deadline}</Card.Subtitle>\n  //                 <Card.Text>\n  //                     Date of posting: {props.item.date}\n  //                     {/* <br /> */}\n  //                 </Card.Text>\n  //                 <div className=\"form-group\">\n  //                         <input type=\"submit\" onClick={()=>(\n  //                                                             // console.log(\"hi there\");\n  //                                                             axios.post('http://localhost:4000/job/deljob', {id: props.item._id})\n  //                                                             .then(res => {console.log(res.data);console.log(\"testing\");\n  //                                                            props.onUpdate(\"1\")})\n  //                                                             )} value=\"Delete Job\" className=\"btn btn-primary\"/>\n  //                 </div>\n  //                 {/* <Card.Link onClick={()=>(console.log(\"hi there\"))}>say hi</Card.Link>\n  //                 <Card.Link href=\"#\">Another Link</Card.Link> */}\n  //             </Card.Body>\n  //             </Card>\n  //         </div>\n  //     )\n  // }\n\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/recruiter').then(response => {\n      this.setState({\n        recruiters: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:4000/recruiter/session\").then(res => {\n      // console.log(res);\n      // console.log(res.data[0].email);\n      this.email = res.data[0].email; //console.log(this.email);\n\n      const Sending = {\n        email: this.email\n      };\n      console.log(\"lol there is no obj yet\");\n      console.log(Sending);\n      axios.post(\"http://localhost:4000/job/getjobs\", Sending).then(res => {\n        console.log(res); // this.jobsobj = res.data;\n\n        this.setState({\n          jobsobj: res.data\n        });\n        console.log(this.jobsobj); // setLoading(false);\n\n        this.setState({\n          isLoading: false\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  toggleDoUpdate() {\n    console.log(\"inside here\");\n    this.setState({\n      do_update: !this.state.do_update\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.do_update !== this.state.do_update) {\n      // alert('entered');\n      const Sending = {\n        email: this.email\n      };\n      axios.post(\"http://localhost:4000/job/getjobs\", Sending).then(res => {\n        console.log(res);\n        this.setState({\n          jobsobj: res.data\n        }); //alert(\"updated\");\n\n        this.state.jobsobj.map(item => {\n          if (item._id === this.state.toSend._id) {\n            this.setState({\n              toSend: item\n            });\n          }\n        });\n        console.log(this.state.jobsobj);\n        this.forceUpdate(); // setLoading(false);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  } // onUpdate(evt){this.setState({do_update:(evt-this.state.do_update)});}\n\n\n  render() {\n    // console.log(\"check\"+do_update);\n    const JobElements = this.state.jobsobj.map(item => {\n      if (item.max_pos != 0) {\n        return React.createElement(JobElement, {\n          key: item,\n          item: item,\n          onClickAccept: this.onClickAccept,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        });\n      }\n    });\n\n    if (this.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      console.log(\"entered render\");\n      console.log(this.jobsobj); // const JobElements = this.jobsobj.map(item => console.log(item)); \n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.showComponent ? React.createElement(CandidatePage, {\n        job: this.state.toSend,\n        onClickAccept: this.onClickAccept,\n        toggleDoUpdate: this.toggleDoUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Posted Jobs\"), JobElements));\n    }\n  }\n\n}\n\nexport default PostedJobs;","map":{"version":3,"sources":["/home/kevin/Downloads/ESW/water-level-monitor/src/components/Recruiter/Dashboards/PostedJobs.js"],"names":["React","Component","axios","ReactDOM","validateFields","classnames","BrowserRouter","Router","Route","Link","DialogTitle","validator","Card","JobElement","CandidatePage","PostedJobs","constructor","props","state","isLoading","do_update","showComponent","toSend","jobsobj","recruiter","onClickAccept","bind","toggleDoUpdate","setState","componentDidMount","get","then","response","recruiters","data","catch","error","console","log","res","email","Sending","post","componentDidUpdate","prevProps","prevState","map","item","_id","forceUpdate","render","JobElements","max_pos"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport { validateFields } from '../../Common/Validation';\nimport classnames from 'classnames';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\"\nimport { DialogTitle } from '@material-ui/core';\nimport validator from 'validator';\nimport Card from 'react-bootstrap/Card';\nimport JobElement from '../Lists/JobElement';\nimport CandidatePage from './CandidatePage'\n// const [isLoading, setLoading] = useState(true);\n\n\n\n\n\nclass PostedJobs extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            do_update:true,\n            showComponent: false,\n            toSend:'',\n            jobsobj : []\n        };\n        // this.onChangeContact = this.onChangeContact.bind(this);\n        // this.onChangeBio = this.onChangeBio.bind(this);\n        // this.sortClicked = this.sortClicked.bind(this);\n        // this.renderIcon = this.renderIcon.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n        // this.email = '';\n        this.recruiter = '';\n        \n        this.onClickAccept = this.onClickAccept.bind(this);\n        this.toggleDoUpdate=this.toggleDoUpdate.bind(this);\n        // this.onUpdate = this.onUpdate.bind(this);\n        // this.notes = ['***'];\n        // const [this.isLoading, this.setLoading] = this.useState(true);\n    }\n    onClickAccept(props){\n        this.setState({\n            showComponent: !this.state.showComponent,\n            toSend: props\n        });\n       }\n    // JobElement (props){\n      \n    //     return(\n    //         <div>\n    //             <Card style={{ width: '18rem' }}>\n    //             <Card.Body>\n    //                 <Card.Title>{props.item.title}</Card.Title>\n    //                 <Card.Subtitle className=\"mb-2 text-muted\">Complete By: {props.item.deadline}</Card.Subtitle>\n    //                 <Card.Text>\n    //                     Date of posting: {props.item.date}\n    //                     {/* <br /> */}\n    //                 </Card.Text>\n    //                 <div className=\"form-group\">\n    //                         <input type=\"submit\" onClick={()=>(\n    //                                                             // console.log(\"hi there\");\n    //                                                             axios.post('http://localhost:4000/job/deljob', {id: props.item._id})\n    //                                                             .then(res => {console.log(res.data);console.log(\"testing\");\n    //                                                            props.onUpdate(\"1\")})\n                                                                \n    //                                                             )} value=\"Delete Job\" className=\"btn btn-primary\"/>\n    //                 </div>\n    //                 {/* <Card.Link onClick={()=>(console.log(\"hi there\"))}>say hi</Card.Link>\n    //                 <Card.Link href=\"#\">Another Link</Card.Link> */}\n    //             </Card.Body>\n    //             </Card>\n    //         </div>\n    //     )\n    // }\n    componentDidMount() {\n        axios.get('http://localhost:4000/recruiter')\n             .then(response => {\n                 this.setState({recruiters: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n        axios.get(\"http://localhost:4000/recruiter/session\")\n             .then(res => {\n                    // console.log(res);\n                    // console.log(res.data[0].email);\n                    this.email = res.data[0].email;\n                    //console.log(this.email);\n                    const Sending={\n                        email: this.email\n                    }\n                    console.log(\"lol there is no obj yet\");\n                    console.log(Sending);\n                    axios.post(\"http://localhost:4000/job/getjobs\",Sending)\n                         .then(res => {\n                                console.log(res);\n                                // this.jobsobj = res.data;\n                                this.setState({\n                                    jobsobj:res.data\n                                })\n                                console.log(this.jobsobj);\n                                // setLoading(false);\n                                this.setState({\n                                    isLoading: false\n                                });\n                         })\n                         .catch(function(error) {\n                             console.log(error);\n                         })\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n    toggleDoUpdate()\n    {\n        console.log(\"inside here\")\n        this.setState({do_update:!this.state.do_update})\n    }\n\n        componentDidUpdate(prevProps,prevState){\n            if(prevState.do_update!==this.state.do_update){\n                // alert('entered');\n            const Sending={\n                            email: this.email\n                        }\n            axios.post(\"http://localhost:4000/job/getjobs\",Sending)\n                            .then(res => {\n                                    console.log(res);\n                                    this.setState({\n                                        jobsobj:res.data\n                                    })\n                                    //alert(\"updated\");\n                                    this.state.jobsobj.map(item=>{\n                                        if(item._id === this.state.toSend._id)\n                                        {\n                                            this.setState({\n                                                toSend:item\n                                            })\n                                        }\n                                    })\n                                     console.log(this.state.jobsobj);\n                                     this.forceUpdate();\n                                    // setLoading(false);\n                                    \n                         })\n                         .catch(function(error) {\n                             console.log(error);\n                         })}\n    }\n\n    // onUpdate(evt){this.setState({do_update:(evt-this.state.do_update)});}\n\n    render() {\n        // console.log(\"check\"+do_update);\n        const JobElements = this.state.jobsobj.map(item =>{ \n                                                    if(item.max_pos != 0){\n                                                        return <JobElement key={item} item={item} onClickAccept={this.onClickAccept}/>\n                                                    }\n                                                }) \n        if(this.isLoading){\n            return(\n                <div>\n                    Loading...\n                </div>\n            )\n        }\n        else{\n        console.log(\"entered render\");\n        console.log(this.jobsobj);\n        // const JobElements = this.jobsobj.map(item => console.log(item)); \n        return(\n            <div>\n            {\n                this.state.showComponent? <CandidatePage job={this.state.toSend} onClickAccept={this.onClickAccept} toggleDoUpdate={this.toggleDoUpdate}/>:\n                <div>\n                <h2>Posted Jobs</h2>\n                    {JobElements}\n                </div> \n            }\n            </div>\n        )\n        }\n    }\n\n}\n\nexport default PostedJobs;"]},"metadata":{},"sourceType":"module"}