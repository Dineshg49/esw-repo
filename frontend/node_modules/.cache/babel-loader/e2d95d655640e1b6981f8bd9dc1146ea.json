{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Downloads/DASS/2019101092/2019101092_assign1/frontend/src/components/Recruiter/Dashboards/EmployeePage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport EmployeeTable from '../Lists/EmployeeTable'; // import _\n\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nconst useStyles = makeStyles({\n  root: {\n    width: 300\n  }\n});\nconst type_to_number = {\n  \"Full-Time\": 'a',\n  \"Part-Time\": 'b',\n  \"Work From Home\": 'c'\n};\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nclass EmployeePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sortUsers = users => {\n      // console.log(users)\n      //uncomment date of application field in sorting and change variable name according to backend name\n      if (this.state.sortValue === \"Name\" && this.state.sortOrder === \"Ascending\") {\n        // console.log(users)\n        return [...users].sort((a, b) => {\n          // console.log(a)\n          // console.log(b)\n          if (a.name > b.name) {\n            return 1;\n          } else if (a.name < b.name) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Date Of Joining\" && this.state.sortOrder === \"Ascending\") {\n        return [...users].sort((a, b) => {\n          if (a.doj > b.doj) {\n            return 1;\n          } else if (a.doj < b.doj) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Rating\" && this.state.sortOrder === \"Ascending\") {\n        return [...users].sort((a, b) => {\n          if (a.rating > b.rating) {\n            return 1;\n          } else if (a.rating < b.rating) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Title\" && this.state.sortOrder === \"Ascending\") {\n        return [...users].sort((a, b) => {\n          if (a.title > b.title) {\n            return 1;\n          } else if (a.title < b.title) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Name\" && this.state.sortOrder === \"Descending\") {\n        return [...users].sort((a, b) => {\n          if (a.name < b.name) {\n            return 1;\n          } else if (a.name > b.name) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Date of Joining\" && this.state.sortOrder === \"Descending\") {\n        return [...users].sort((a, b) => {\n          if (a.doj < b.doj) {\n            return 1;\n          } else if (a.doj > b.doj) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Rating\" && this.state.sortOrder === \"Descending\") {\n        return [...users].sort((a, b) => {\n          if (a.rating < b.rating) {\n            return 1;\n          } else if (a.rating > b.rating) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else if (this.state.sortValue === \"Title\" && this.state.sortOrder === \"Descending\") {\n        return [...users].sort((a, b) => {\n          if (a.title < b.title) {\n            return 1;\n          } else if (a.title > b.title) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      } else {\n        return users;\n      }\n    };\n\n    this.handleSortUsers = event => {\n      //  console.log(\"sort button\", this.state.sortValue)\n      this.setState({\n        sortValue: event.target.value\n      });\n    };\n\n    this.handleSortOrder = event => {\n      //  console.log(\"sort button\", this.state.sortValue)\n      this.setState({\n        sortOrder: event.target.value\n      });\n    };\n\n    this.state = {\n      sortValue: 'Name',\n      sortOrder: 'Ascending',\n      users: [],\n      user: {},\n      isLoading: true //    final_users:[]\n\n    }; // this.final_users=[];\n\n    this.jobs = [];\n    this.dateMap = {};\n    this.email = ''; // this.sortClicked = this.sortClicked.bind(this);\n    // this.renderIcon = this.renderIcon.bind(this);\n    // this.sortChange = this.sortChange.bind(this);\n    // this.email='';\n    // this.user=''\n  }\n\n  componentDidMount() {\n    // console.log(this.state.check_box)\n    // console.log(this.state.check_box[\"a\"])\n    // console.log(this.props)\n    axios.get('http://localhost:4000/job').then(response => {\n      //  this.setState({jobs: response.data});\n      this.jobs = response.data; //  console.log(this.jobs)\n\n      axios.get(\"http://localhost:4000/recruiter/session\").then(res => {\n        this.email = res.data[0].email;\n        const JobElements = this.jobs.map(item => {\n          //console.log(item)\n          if (item.email === this.email) {\n            return item;\n          } else {\n            return null;\n          }\n        });\n\n        var _ = require('underscore');\n\n        var thinboi = _.compact(JobElements);\n\n        this.jobs = thinboi;\n        this.jobs.map(item => {\n          item.doj.map(mapboi => {\n            this.dateMap[mapboi.email] = mapboi.date;\n          });\n          item.accepted.map(user => {\n            const Sending = {\n              email: user\n            };\n            axios.post(\"http://localhost:4000/user/findone\", Sending).then(res => {\n              console.log(res);\n              var rating_for_obj = 0;\n              if (res.data.no_of_raters !== 0) rating_for_obj = res.data.rating / res.data.no_of_raters;\n              const newobj = {\n                title: item.title,\n                doj: this.dateMap[user],\n                type: item.job_type,\n                rating: rating_for_obj,\n                has_rated: res.data.has_rated,\n                name: res.data.name,\n                id: res.data._id\n              };\n              this.setState({\n                users: [...this.state.users, newobj]\n              });\n            }).catch(function (error) {\n              console.log(error);\n            });\n          });\n        });\n        this.setState({\n          isLoading: false\n        }); // console.log(\"done\")\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }); // for (index = 0; index < this.props.job.doa.length(); ++index) {\n    // this.dateMap[this.props.job.doa[index].email] = this.props.job.doa[index].date;\n    // }\n  }\n\n  sortClicked() {\n    console.log(this.state);\n  }\n\n  LoadingDone() {\n    this.setState({\n      isLoading: !this.state.isLoading\n    });\n  }\n\n  renderIcon() {\n    if (this.state.sortName) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      const filteredUsers = this.state.users;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Sort Options\"), React.createElement(\"select\", {\n        name: \"sortValue\",\n        onChange: this.handleSortUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"option\", {\n        value: \"Date Of Joining\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Date Of Joining\"), React.createElement(\"option\", {\n        value: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Job Title\"), React.createElement(\"option\", {\n        value: \"Rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Rating\")), React.createElement(\"select\", {\n        name: \"sortOrder\",\n        onChange: this.handleSortOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Ascending\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Ascending\"), React.createElement(\"option\", {\n        value: \"Descending\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Descending\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(EmployeeTable, {\n        users: this.sortUsers(filteredUsers),\n        email: this.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }));\n    }\n  } // render(){\n  //     return(\n  //         <div>HI</div>\n  //     )\n  // }\n\n\n}\n\nexport default EmployeePage;","map":{"version":3,"sources":["/home/kevin/Downloads/DASS/2019101092/2019101092_assign1/frontend/src/components/Recruiter/Dashboards/EmployeePage.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","Slider","makeStyles","Typography","FormGroup","FormControlLabel","Checkbox","EmployeeTable","ArrowUpwardIcon","ArrowDownwardIcon","useStyles","root","width","type_to_number","valuetext","value","EmployeePage","constructor","props","sortUsers","users","state","sortValue","sortOrder","sort","a","b","name","doj","rating","title","handleSortUsers","event","setState","target","handleSortOrder","user","isLoading","jobs","dateMap","email","componentDidMount","get","then","response","data","res","JobElements","map","item","_","require","thinboi","compact","mapboi","date","accepted","Sending","post","console","log","rating_for_obj","no_of_raters","newobj","type","job_type","has_rated","id","_id","catch","error","sortClicked","LoadingDone","renderIcon","sortName","render","filteredUsers"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport EmployeeTable from '../Lists/EmployeeTable'\n// import _\n\n\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nconst useStyles = makeStyles({\n    root: {\n      width: 300,\n    },\n  });\n\nconst type_to_number={\"Full-Time\":'a',\"Part-Time\":'b',\"Work From Home\":'c'};\n\n  function valuetext(value) {\n    return `${value}`;\n  }\n\nclass EmployeePage extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n           sortValue: 'Name',\n           sortOrder: 'Ascending',\n           users:[],\n           user:{},\n           isLoading: true,\n        //    final_users:[]\n        };\n       \n        // this.final_users=[];\n        \n        this.jobs=[];\n        this.dateMap = {};\n        this.email=''\n        // this.sortClicked = this.sortClicked.bind(this);\n        // this.renderIcon = this.renderIcon.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n        // this.email='';\n        // this.user=''\n    }\n\n    componentDidMount() {\n        // console.log(this.state.check_box)\n        // console.log(this.state.check_box[\"a\"])\n        // console.log(this.props)\n        axios.get('http://localhost:4000/job')\n             .then(response => {\n                //  this.setState({jobs: response.data});\n                 this.jobs=response.data;\n                //  console.log(this.jobs)\n                 axios.get(\"http://localhost:4000/recruiter/session\")\n                .then(res => {\n                    this.email = res.data[0].email;\n                    const JobElements = this.jobs.map(item =>{ \n                                                    //console.log(item)\n                                                    if(item.email === this.email){\n                                                        return item;\n                                                    }\n                                                    else{\n                                                        return null;\n                                                    }\n                                                });\n                    var _ = require('underscore');\n                    var thinboi = _.compact(JobElements);                            \n                    this.jobs=thinboi;\n                    this.jobs.map(item =>{\n                        item.doj.map( mapboi => {\n                            this.dateMap[mapboi.email] = mapboi.date;\n                        });\n                        \n                        item.accepted.map(user =>{\n                            const Sending={\n                                email:user\n                            }\n                            axios.post(\"http://localhost:4000/user/findone\",Sending)\n                            .then(res =>{\n                                console.log(res)\n                                var rating_for_obj=0;\n                                if(res.data.no_of_raters!==0)\n                                    rating_for_obj=res.data.rating/res.data.no_of_raters;\n                                \n                                const newobj={\n                                    title: item.title,\n                                    doj: this.dateMap[user],\n                                    type:item.job_type,\n                                    rating: rating_for_obj,\n                                    has_rated:res.data.has_rated,\n                                    name: res.data.name,\n                                    id: res.data._id\n                                };\n                                this.setState({\n                                    users:[...this.state.users,newobj]\n                                })\n                            })\n                            .catch(function(error) {\n                                console.log(error);\n                            })\n                            \n                        })\n                    })\n                    this.setState({isLoading: false});\n                    // console.log(\"done\")\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n                \n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n             \n        // for (index = 0; index < this.props.job.doa.length(); ++index) {\n            // this.dateMap[this.props.job.doa[index].email] = this.props.job.doa[index].date;\n        // }\n             \n    }\n\n\n    sortClicked(){\n        console.log(this.state);\n    }\n    LoadingDone(){\n        this.setState({isLoading:!this.state.isLoading})\n    }\n    sortUsers = (users) => {\n        // console.log(users)\n        //uncomment date of application field in sorting and change variable name according to backend name\n        if(this.state.sortValue === \"Name\" && this.state.sortOrder === \"Ascending\") {\n            // console.log(users)\n            return [...users].sort((a,b) => {\n                // console.log(a)\n            // console.log(b)\n            if(a.name > b.name) {\n                return 1\n            }else if (a.name < b.name) {\n                return -1\n            }else {\n                return 0\n            }\n            })\n        }\n        else if(this.state.sortValue === \"Date Of Joining\" && this.state.sortOrder === \"Ascending\") {\n                return [...users].sort((a,b) => {\n                if(a.doj > b.doj) {\n                    return 1\n                }else if (a.doj < b.doj) {\n                    return -1\n                }else {\n                    return 0\n                }\n            })\n        }\n        else if(this.state.sortValue === \"Rating\" && this.state.sortOrder === \"Ascending\") {\n                return [...users].sort((a,b) => {\n                   \n                if(a.rating > b.rating) {\n                    return 1\n                }else if (a.rating < b.rating) {\n                    return -1\n                }else {\n                    return 0\n                }\n            })\n        }\n        else if(this.state.sortValue === \"Title\" && this.state.sortOrder === \"Ascending\") {\n            return [...users].sort((a,b) => {\n            if(a.title > b.title) {\n                return 1\n            }else if (a.title < b.title) {\n                return -1\n            }else {\n                return 0\n            }\n        })\n    }\n        else if(this.state.sortValue === \"Name\" && this.state.sortOrder === \"Descending\") {\n            return [...users].sort((a,b) => {\n            if(a.name < b.name) {\n                return 1\n            }else if (a.name > b.name) {\n                return -1\n            }else {\n                return 0\n            }\n            })\n        }\n        else if(this.state.sortValue === \"Date of Joining\" && this.state.sortOrder === \"Descending\") {\n                return [...users].sort((a,b) => {\n                if(a.doj < b.doj) {\n                    return 1\n                }else if (a.doj > b.doj) {\n                    return -1\n                }else {\n                    return 0\n                }\n            })\n        }\n        else if(this.state.sortValue === \"Rating\" && this.state.sortOrder === \"Descending\") {\n                return [...users].sort((a,b) => {\n                if(a.rating < b.rating) {\n                    return 1\n                }else if (a.rating > b.rating) {\n                    return -1\n                }else {\n                    return 0\n                }\n            })\n        }\n        else if(this.state.sortValue === \"Title\" && this.state.sortOrder === \"Descending\") {\n                return [...users].sort((a,b) => {\n                if(a.title < b.title) {\n                    return 1\n                }else if (a.title > b.title) {\n                    return -1\n                }else {\n                    return 0\n                }\n            })\n        }\n        else {\n            return users\n        }\n    }\n    \n    renderIcon(){\n        if(this.state.sortName){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n    handleSortUsers = (event) => {\n    //  console.log(\"sort button\", this.state.sortValue)\n    this.setState({\n        sortValue: event.target.value\n    })\n    }\n\n    handleSortOrder = (event) => {\n    //  console.log(\"sort button\", this.state.sortValue)\n    this.setState({\n        sortOrder: event.target.value\n    })\n    }\n\n\n    render() {\n        \n     \n        \n        if(this.state.isLoading){\n            return(\n                <div>\n                    Loading...\n                </div>\n            )\n        }\n        else{\n\n            const filteredUsers=this.state.users\n            return (\n                <div>\n                    <label>Sort Options</label>\n                    <select name=\"sortValue\" onChange={this.handleSortUsers}>\n                        <option value=\"Name\">Name</option>\n                        <option value=\"Date Of Joining\">Date Of Joining</option>\n                        <option value=\"Title\">Job Title</option>\n                        <option value=\"Rating\">Rating</option>\n                    </select> \n                    <select name=\"sortOrder\" onChange={this.handleSortOrder}>\n                        <option value=\"Ascending\">Ascending</option>\n                        <option value=\"Descending\">Descending</option>\n                    </select> \n                    <br/>\n                    \n                    \n                    < EmployeeTable users={this.sortUsers(filteredUsers)} email={this.email}/> \n                </div>\n            )\n        }\n    }\n\n    // render(){\n    //     return(\n    //         <div>HI</div>\n    //     )\n    // }\n}\n\nexport default EmployeePage;\n"]},"metadata":{},"sourceType":"module"}