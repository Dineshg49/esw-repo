{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Downloads/DASS/2019101092/2019101092_assign1/frontend/src/components/Recruiter/Dashboards/NewJob.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport { validateFields } from '../../Common/Validation';\nimport classnames from 'classnames';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { DialogTitle } from '@material-ui/core';\nimport validator from 'validator'; // import UserProfile from './test';\n\nconst initialState = {\n  max_applicants: {\n    value: '',\n    validateOnChange: false,\n    error: ''\n  },\n  max_positions: {\n    value: '',\n    validateOnChange: false,\n    error: ''\n  },\n  salary: {\n    value: '',\n    validateOnChange: false,\n    error: ''\n  },\n  title: {\n    value: '',\n    validateOnChange: false,\n    error: ''\n  },\n  deadline: {\n    value: '',\n    validateOnChange: false,\n    error: ''\n  },\n  skills: {\n    value: '',\n    validateOnChange: false,\n    error: ''\n  },\n  type: \"Full-Time\",\n  //button\n  duration: \"0\",\n  //button\n  submitCalled: false,\n  allFieldsValidated: false\n};\nexport default class NewJob extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.email = '';\n    this.recruiter = '';\n    this.onChangeType = this.onChangeType.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    });\n    axios.get(\"http://localhost:4000/recruiter/session\").then(res => {\n      // console.log(res);\n      // console.log(res.data[0].email);\n      this.email = res.data[0].email; //console.log(this.email);\n\n      const Sending = {\n        email: this.email\n      };\n      console.log(Sending);\n      axios.post(\"http://localhost:4000/recruiter/findone\", Sending).then(res => {\n        // console.log(res);\n        this.recruiter = res.data; // this.state.newBio = this.recruiter.bio;\n        // this.state.newContact = this.recruiter.contact_no;\n        // this.setState({notes: res.data.skills});\n        // this.notes = res.data.skills;\n        // console.log(this.recruiter.name);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  handleBlur(validationFunc, evt) {\n    const field = evt.target.name; // validate onBlur only when validateOnChange for that field is false\n    // because if validateOnChange is already true there is no need to validate onBlur\n\n    if (this.state[field]['validateOnChange'] === false && this.state.submitCalled === false) {\n      this.setState(state => ({\n        [field]: { ...state[field],\n          validateOnChange: true,\n          error: validationFunc(state[field].value)\n        }\n      }));\n    }\n\n    return;\n  }\n\n  handleChange(validationFunc, evt) {\n    const field = evt.target.name;\n    const fieldVal = evt.target.value;\n    this.setState(state => ({\n      [field]: { ...state[field],\n        value: fieldVal,\n        error: state[field]['validateOnChange'] ? validationFunc(fieldVal) : ''\n      }\n    }));\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault(); // validate all fields\n\n    console.log(this.state);\n    const {\n      title,\n      deadline,\n      salary,\n      max_positions,\n      max_applicants,\n      skills\n    } = this.state;\n    const titleError = validateFields.validateUsername(title.value);\n    const deadlineError = validateFields.validateBigDate(deadline.value);\n    const salaryError = validateFields.validateNumber(salary.value);\n    const max_positionsError = validateFields.validateNumber(max_positions.value);\n    const max_applicantsError = validateFields.validateNumber(max_applicants.value);\n    const skillsError = validateFields.validateUsername(skills.value);\n\n    if ([titleError, salaryError, max_applicantsError, max_positionsError, deadlineError, skillsError].every(e => e === false)) {\n      // clear state and show all fields are validated\n      var skillarray = skills.value.split(\",\"); // console.log(skillarray);\n\n      const Sending = {\n        name: this.recruiter.name,\n        email: this.email,\n        contact_no: this.recruiter.contact_no,\n        skills: skillarray,\n        max_app: max_applicants.value,\n        max_pos: max_positions.value,\n        salary: salary.value,\n        title: title.value,\n        deadline: deadline.value,\n        job_type: this.state.type,\n        duration: this.state.duration\n      };\n      axios.post('http://localhost:4000/job/addjob', Sending).then(res => {\n        alert(res.data);\n      });\n      console.log(Sending);\n      this.setState({\n        salary: '',\n        max_applicants: '',\n        max_positions: '',\n        title: '',\n        deadline: '',\n        skills: ''\n      });\n      this.setState({ ...initialState,\n        allFieldsValidated: true\n      });\n      this.showAllFieldsValidated(); // window.location.reload(false);\n      // window.open(\"/recruiters/recruiterprofile\",\"_self\");\n    } else {\n      // update the state with errors\n      this.setState(state => ({\n        title: { ...state.title,\n          validateOnChange: true,\n          error: titleError\n        },\n        salary: { ...state.salary,\n          validateOnChange: true,\n          error: salaryError\n        },\n        max_positions: { ...state.max_positions,\n          validateOnChange: true,\n          error: max_positionsError\n        },\n        max_applicants: { ...state.max_applicants,\n          validateOnChange: true,\n          error: max_applicantsError\n        },\n        deadline: { ...state.deadline,\n          validateOnChange: true,\n          error: deadlineError\n        },\n        skills: { ...state.skills,\n          validateOnChange: true,\n          error: skillsError\n        }\n      }));\n    }\n  }\n\n  showAllFieldsValidated() {\n    setTimeout(() => {\n      this.setState({\n        allFieldsValidated: false\n      });\n    }, 1500);\n  } // onChangeEmail(event) {\n  //     this.setState({ email: event.target.value });\n  // }\n  // onChangePassword(event) {\n  //     this.setState({ password: event.target.value });\n  // }\n\n\n  onChangeType(event) {\n    this.setState({\n      type: event.target.value\n    });\n  }\n\n  onChangeDuration(event) {\n    this.setState({\n      duration: event.target.value\n    });\n  }\n\n  onSkillsChanged(event) {\n    this.setState({\n      notes: event.target.value\n    });\n  } // onSubmit(e) {\n  //     e.preventDefault();\n  //     const newUser = {\n  //         email: this.state.email,\n  //         password: this.state.password,\n  //     }\n  //     //console.log(this.state.type)\n  //     if(this.state.type=='user'){\n  //         axios.post('http://localhost:4000/user/login', newUser)\n  //             .then(res => {alert( res.data);console.log(res.data)})\n  //             ;}\n  //     else{\n  //         axios.post('http://localhost:4000/recruiter/login', newUser)\n  //             .then(res => {alert( res.data);console.log(res.data)})\n  //             ;}\n  //     this.setState({\n  //         email: '',\n  //         password:'',\n  //     });\n\n\n  render() {\n    const {\n      title,\n      deadline,\n      salary,\n      max_applicants,\n      max_positions,\n      skills,\n      allFieldsValidated\n    } = this.state; //console.log(\"hi\");\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: evt => this.handleSubmit(evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Title: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: title.value,\n      placeholder: \"Title Of Job\",\n      className: classnames('form-control', {\n        'is-valid': title.error === false\n      }, {\n        'is-invalid': title.error\n      }),\n      onChange: evt => this.handleChange(validateFields.validateUsername, evt),\n      onBlur: evt => this.handleBlur(validateFields.validateUsername, evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, title.error)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Maximum Applicants: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"max_applicants\",\n      value: max_applicants.value,\n      placeholder: \"Max Applicants Allowed\",\n      className: classnames('form-control', {\n        'is-valid': max_applicants.error === false\n      }, {\n        'is-invalid': max_applicants.error\n      }),\n      onChange: evt => this.handleChange(validateFields.validateNumber, evt),\n      onBlur: evt => this.handleBlur(validateFields.validateNumber, evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, max_applicants.error)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Maximum Positions: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"max_positions\",\n      value: max_positions.value,\n      placeholder: \"Max Positions Available\",\n      className: classnames('form-control', {\n        'is-valid': max_positions.error === false\n      }, {\n        'is-invalid': max_positions.error\n      }),\n      onChange: evt => this.handleChange(validateFields.validateNumber, evt),\n      onBlur: evt => this.handleBlur(validateFields.validateNumber, evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, max_positions.error)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Salary: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"salary\",\n      value: salary.value,\n      placeholder: \"Salary\",\n      className: classnames('form-control', {\n        'is-valid': salary.error === false\n      }, {\n        'is-invalid': salary.error\n      }),\n      onChange: evt => this.handleChange(validateFields.validateNumber, evt),\n      onBlur: evt => this.handleBlur(validateFields.validateNumber, evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, salary.error)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Deadline: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"deadline\",\n      value: deadline.value,\n      placeholder: \"Enter deadline in YYYY-MM-DD-HH-mm format\",\n      className: classnames('form-control', {\n        'is-valid': deadline.error === false\n      }, {\n        'is-invalid': deadline.error\n      }),\n      onChange: evt => this.handleChange(validateFields.validateBigDate, evt),\n      onBlur: evt => this.handleBlur(validateFields.validateBigDate, evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, deadline.error)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Required Skills: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"skills\",\n      value: skills.value,\n      placeholder: \"Add Skills Required for the Job, separated by commas(,)\",\n      className: classnames('form-control', {\n        'is-valid': skills.error === false\n      }, {\n        'is-invalid': skills.error\n      }),\n      onChange: evt => this.handleChange(validateFields.validateUsername, evt),\n      onBlur: evt => this.handleBlur(validateFields.validateUsername, evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, skills.error)), \"Type:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"Full-Time\",\n      checked: this.state.type === \"Full-Time\",\n      onChange: this.onChangeType,\n      name: \"gender\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }), \" Full-Time \\xA0\\xA0\\xA0\\xA0\", React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"Part-Time\",\n      checked: this.state.type === \"Part-Time\",\n      onChange: this.onChangeType,\n      name: \"gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), \" Part-Time   \\xA0\\xA0\\xA0\\xA0\", React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"Work From Home\",\n      checked: this.state.type === \"Work From Home\",\n      onChange: this.onChangeType,\n      name: \"gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }), \" Work From Home  \\xA0\\xA0\\xA0\\xA0\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }), \"Duration(in months):\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"0\",\n      checked: this.state.duration === \"0\",\n      onChange: this.onChangeDuration,\n      name: \"gender1\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }), \" 0(indefinite) \\xA0\\xA0\\xA0\", React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"1\",\n      checked: this.state.duration === \"1\",\n      onChange: this.onChangeDuration,\n      name: \"gender1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }), \" 1   \\xA0\\xA0\\xA0\", React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"2\",\n      checked: this.state.duration === \"2\",\n      onChange: this.onChangeDuration,\n      name: \"gender1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), \" 2   \\xA0\\xA0\\xA0\", React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"3\",\n      checked: this.state.duration === \"3\",\n      onChange: this.onChangeDuration,\n      name: \"gender1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), \" 3   \\xA0\\xA0\\xA0\", React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"4\",\n      checked: this.state.duration === \"4\",\n      onChange: this.onChangeDuration,\n      name: \"gender1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }), \" 4   \\xA0\\xA0\\xA0\", React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"5\",\n      checked: this.state.duration === \"5\",\n      onChange: this.onChangeDuration,\n      name: \"gender1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), \" 5   \\xA0\\xA0\\xA0\", React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"6\",\n      checked: this.state.duration === \"6\",\n      onChange: this.onChangeDuration,\n      name: \"gender1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }), \" 6   \\xA0\\xA0\\xA0\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-secondary btn-block\",\n      onMouseDown: () => this.setState({\n        submitCalled: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Add Job\")));\n  }\n\n}","map":{"version":3,"sources":["/home/kevin/Downloads/DASS/2019101092/2019101092_assign1/frontend/src/components/Recruiter/Dashboards/NewJob.js"],"names":["React","Component","axios","ReactDOM","validateFields","classnames","BrowserRouter","Router","Route","Link","DialogTitle","validator","initialState","max_applicants","value","validateOnChange","error","max_positions","salary","title","deadline","skills","type","duration","submitCalled","allFieldsValidated","NewJob","constructor","props","state","email","recruiter","onChangeType","bind","onChangeDuration","componentDidMount","setState","mounted","get","then","res","data","Sending","console","log","post","catch","handleBlur","validationFunc","evt","field","target","name","handleChange","fieldVal","handleSubmit","preventDefault","titleError","validateUsername","deadlineError","validateBigDate","salaryError","validateNumber","max_positionsError","max_applicantsError","skillsError","every","e","skillarray","split","contact_no","max_app","max_pos","job_type","alert","showAllFieldsValidated","setTimeout","event","onSkillsChanged","notes","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport { validateFields } from '../../Common/Validation';\nimport classnames from 'classnames';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { DialogTitle } from '@material-ui/core';\nimport validator from 'validator';\n// import UserProfile from './test';\n\n\nconst initialState = {\n \n    max_applicants:{\n        value:'',\n        validateOnChange:false,\n        error: ''\n    },\n    max_positions:{\n        value:'',\n        validateOnChange:false,\n        error: ''\n    },\n    salary:{\n        value:'',\n        validateOnChange:false,\n        error: ''\n    },\n    title:{\n        value:'',\n        validateOnChange:false,\n        error: ''\n    },\n    deadline:{\n        value:'',\n        validateOnChange:false,\n        error: ''\n    },\n    skills:{\n        value:'',\n        validateOnChange:false,\n        error:''\n    },\n    type:\"Full-Time\", //button\n    duration:\"0\",//button\n    submitCalled: false,\n    allFieldsValidated: false\n  };\n\nexport default class NewJob extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = initialState;\n        this.email='';\n        this.recruiter = '';\n        this.onChangeType = this.onChangeType.bind(this);\n        this.onChangeDuration = this.onChangeDuration.bind(this);\n        };\n\n\n        componentDidMount() {\n          this.setState({mounted: true});\n            axios.get(\"http://localhost:4000/recruiter/session\")\n                 .then(res => {\n                        // console.log(res);\n                        // console.log(res.data[0].email);\n                        this.email = res.data[0].email;\n                        //console.log(this.email);\n                        const Sending={\n                            email: this.email\n                        }\n                        console.log(Sending);\n                        axios.post(\"http://localhost:4000/recruiter/findone\",Sending)\n                             .then(res => {\n                                    // console.log(res);\n                                    this.recruiter=res.data;\n                                    // this.state.newBio = this.recruiter.bio;\n                                    // this.state.newContact = this.recruiter.contact_no;\n                                    // this.setState({notes: res.data.skills});\n                                    // this.notes = res.data.skills;\n                                   // console.log(this.recruiter.name);\n                             })\n                             .catch(function(error) {\n                                 console.log(error);\n                             })\n                 })\n                 .catch(function(error) {\n                     console.log(error);\n                 })\n            \n            \n        }\n        \n        handleBlur(validationFunc, evt) {\n            const field = evt.target.name;\n            // validate onBlur only when validateOnChange for that field is false\n            // because if validateOnChange is already true there is no need to validate onBlur\n            if (\n              this.state[field]['validateOnChange'] === false &&\n              this.state.submitCalled === false\n            ) {\n              this.setState(state => ({\n                [field]: {\n                  ...state[field],\n                  validateOnChange: true,\n                  error: validationFunc(state[field].value)\n                }\n              }));\n            }\n            return;\n          }\n\n        handleChange(validationFunc, evt) {\n        const field = evt.target.name;\n        const fieldVal = evt.target.value;\n        this.setState(state => ({\n            [field]: {\n            ...state[field],\n            value: fieldVal,\n            error: state[field]['validateOnChange'] ? validationFunc(fieldVal) : ''\n            }\n        }));\n        }\n\n        handleSubmit(evt) {\n            evt.preventDefault();\n            // validate all fields\n            console.log(this.state)\n            const { title,deadline,salary,max_positions,max_applicants,skills} = this.state;\n            const titleError = validateFields.validateUsername(title.value);\n            const deadlineError = validateFields.validateBigDate(deadline.value);\n            const salaryError = validateFields.validateNumber(salary.value);\n            const max_positionsError = validateFields.validateNumber(max_positions.value);\n            const max_applicantsError = validateFields.validateNumber(max_applicants.value);\n            const skillsError = validateFields.validateUsername(skills.value);\n            if ([titleError, salaryError,max_applicantsError,max_positionsError,deadlineError,skillsError].every(e => e === false)) {\n              \n           \n              // clear state and show all fields are validated\n              var skillarray=skills.value.split(\",\");\n              // console.log(skillarray);\n              const Sending = {\n                  name: this.recruiter.name,\n                  email: this.email,\n                  contact_no: this.recruiter.contact_no,\n                  skills:skillarray,\n                  max_app:max_applicants.value,\n                  max_pos:max_positions.value,\n                  salary: salary.value,\n                  title:title.value,\n                  deadline:deadline.value,\n                  job_type:this.state.type,\n                  duration:this.state.duration\n              }\n             \n              axios.post('http://localhost:4000/job/addjob', Sending)\n                .then(res => {\n                    alert( res.data);\n                });\n\n               console.log(Sending);\n               this.setState({\n                salary:'',\n                max_applicants:'',\n                max_positions:'',\n                title:'',\n                deadline:'',\n                skills:'',\n            });\n              this.setState({ ...initialState, allFieldsValidated: true });\n              \n              this.showAllFieldsValidated();\n              \n              // window.location.reload(false);\n              // window.open(\"/recruiters/recruiterprofile\",\"_self\");\n            } else {\n              // update the state with errors\n              this.setState(state => ({\n                title: {\n                  ...state.title,\n                  validateOnChange: true,\n                  error: titleError\n                },\n                salary: {\n                    ...state.salary,\n                    validateOnChange: true,\n                    error: salaryError\n                  },\n                max_positions: {\n                  ...state.max_positions,\n                  validateOnChange: true,\n                  error: max_positionsError\n                },\n                max_applicants: {\n                    ...state.max_applicants,\n                    validateOnChange: true,\n                    error: max_applicantsError\n                  },\n                  deadline: {\n                    ...state.deadline,\n                    validateOnChange: true,\n                    error: deadlineError\n                  },\n                  skills: {\n                    ...state.skills,\n                    validateOnChange: true,\n                    error: skillsError\n                  },\n              }));\n            }\n          }\n        \n          showAllFieldsValidated() {\n            setTimeout(() => {\n              this.setState({ allFieldsValidated: false });\n            }, 1500);\n          }\n        \n    \n    // onChangeEmail(event) {\n    //     this.setState({ email: event.target.value });\n    // }\n    // onChangePassword(event) {\n    //     this.setState({ password: event.target.value });\n    // }\n    onChangeType(event) {\n        this.setState({ type: event.target.value });\n    }\n    onChangeDuration(event) {\n        this.setState({ duration: event.target.value });\n    }\n    onSkillsChanged(event){\n        this.setState({notes:event.target.value});\n    }\n\n    // onSubmit(e) {\n    //     e.preventDefault();\n\n    //     const newUser = {\n    //         email: this.state.email,\n    //         password: this.state.password,\n    //     }\n    //     //console.log(this.state.type)\n    //     if(this.state.type=='user'){\n    //         axios.post('http://localhost:4000/user/login', newUser)\n    //             .then(res => {alert( res.data);console.log(res.data)})\n    //             ;}\n        \n    //     else{\n    //         axios.post('http://localhost:4000/recruiter/login', newUser)\n    //             .then(res => {alert( res.data);console.log(res.data)})\n    //             ;}\n\n    //     this.setState({\n    //         email: '',\n    //         password:'',\n    //     });\n    \n\n    render() {\n        const { title, deadline,salary,max_applicants,max_positions,skills, allFieldsValidated } = this.state;\n        //console.log(\"hi\");\n        return (\n            \n            <div>\n                \n                <form onSubmit={evt => this.handleSubmit(evt)}>\n                    <div className=\"form-group\">\n                        <label>Title: </label>\n                        <input \n                                type=\"text\" \n                                name=\"title\"\n                               value={title.value}\n                               placeholder=\"Title Of Job\"\n                               className={classnames(\n                                'form-control',\n                                { 'is-valid': title.error === false },\n                                { 'is-invalid': title.error }\n                              )}\n                              onChange={evt =>\n                                this.handleChange(validateFields.validateUsername, evt)\n                              }\n                              onBlur={evt =>\n                                this.handleBlur(validateFields.validateUsername, evt)\n                              }\n                            />\n                            <div className=\"invalid-feedback\">{title.error}</div>\n             \n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Maximum Applicants: </label>\n                        <input \n                                type=\"text\" \n                                name=\"max_applicants\"\n                               value={max_applicants.value}\n                               placeholder=\"Max Applicants Allowed\"\n                               className={classnames(\n                                'form-control',\n                                { 'is-valid': max_applicants.error === false },\n                                { 'is-invalid': max_applicants.error }\n                              )}\n                              onChange={evt =>\n                                this.handleChange(validateFields.validateNumber, evt)\n                              }\n                              onBlur={evt =>\n                                this.handleBlur(validateFields.validateNumber, evt)\n                              }\n                            />\n                            <div className=\"invalid-feedback\">{max_applicants.error}</div>\n             \n                    </div>\n                    <div className=\"form-group\">\n                        <label>Maximum Positions: </label>\n                        <input \n                                type=\"text\" \n                                name=\"max_positions\"\n                               value={max_positions.value}\n                               placeholder=\"Max Positions Available\"\n                               className={classnames(\n                                'form-control',\n                                { 'is-valid': max_positions.error === false },\n                                { 'is-invalid': max_positions.error }\n                              )}\n                              onChange={evt =>\n                                this.handleChange(validateFields.validateNumber, evt)\n                              }\n                              onBlur={evt =>\n                                this.handleBlur(validateFields.validateNumber, evt)\n                              }\n                            />\n                            <div className=\"invalid-feedback\">{max_positions.error}</div>\n             \n                    </div>\n                    <div className=\"form-group\">\n                        <label>Salary: </label>\n                        <input \n                                type=\"text\" \n                                name=\"salary\"\n                               value={salary.value}\n                               placeholder=\"Salary\"\n                               className={classnames(\n                                'form-control',\n                                { 'is-valid': salary.error === false },\n                                { 'is-invalid': salary.error }\n                              )}\n                              onChange={evt =>\n                                this.handleChange(validateFields.validateNumber, evt)\n                              }\n                              onBlur={evt =>\n                                this.handleBlur(validateFields.validateNumber, evt)\n                              }\n                            />\n                            <div className=\"invalid-feedback\">{salary.error}</div>\n             \n                    </div>\n                    <div className=\"form-group\">\n                        <label>Deadline: </label>\n                        <input \n                                type=\"text\" \n                                name=\"deadline\"\n                               value={deadline.value}\n                               placeholder=\"Enter deadline in YYYY-MM-DD-HH-mm format\"\n                               className={classnames(\n                                'form-control',\n                                { 'is-valid': deadline.error === false },\n                                { 'is-invalid': deadline.error }\n                              )}\n                              onChange={evt =>\n                                this.handleChange(validateFields.validateBigDate, evt)\n                              }\n                              onBlur={evt =>\n                                this.handleBlur(validateFields.validateBigDate, evt)\n                              }\n                            />\n                            <div className=\"invalid-feedback\">{deadline.error}</div>\n             \n                    </div>\n                    <div className=\"form-group\">\n                        <label>Required Skills: </label>\n                        <input \n                                type=\"text\" \n                                name=\"skills\"\n                               value={skills.value}\n                               placeholder=\"Add Skills Required for the Job, separated by commas(,)\"\n                               className={classnames(\n                                'form-control',\n                                { 'is-valid': skills.error === false },\n                                { 'is-invalid': skills.error }\n                              )}\n                              onChange={evt =>\n                                this.handleChange(validateFields.validateUsername, evt)\n                              }\n                              onBlur={evt =>\n                                this.handleBlur(validateFields.validateUsername, evt)\n                              }\n                            />\n                            <div className=\"invalid-feedback\">{skills.error}</div>   \n                    </div>\n\n                    Type:<br/>\n                    <div >\n                        <input type=\"radio\" value=\"Full-Time\" checked={this.state.type === \"Full-Time\"} onChange={this.onChangeType} name=\"gender\" defaultChecked/> Full-Time &nbsp;&nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" value=\"Part-Time\" checked={this.state.type === \"Part-Time\"} onChange={this.onChangeType}  name=\"gender\" /> Part-Time   &nbsp;&nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" value=\"Work From Home\" checked={this.state.type === \"Work From Home\"} onChange={this.onChangeType}  name=\"gender\" /> Work From Home  &nbsp;&nbsp;&nbsp;&nbsp;\n                    </div>\n                    <br/>\n                    Duration(in months):<br/>\n                    <div >\n                        <input type=\"radio\" value=\"0\" checked={this.state.duration === \"0\"} onChange={this.onChangeDuration} name=\"gender1\" defaultChecked/> 0(indefinite) &nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" value=\"1\" checked={this.state.duration === \"1\"} onChange={this.onChangeDuration}  name=\"gender1\" /> 1   &nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" value=\"2\" checked={this.state.duration === \"2\"} onChange={this.onChangeDuration}  name=\"gender1\" /> 2   &nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" value=\"3\" checked={this.state.duration === \"3\"} onChange={this.onChangeDuration}  name=\"gender1\" /> 3   &nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" value=\"4\" checked={this.state.duration === \"4\"} onChange={this.onChangeDuration}  name=\"gender1\" /> 4   &nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" value=\"5\" checked={this.state.duration === \"5\"} onChange={this.onChangeDuration}  name=\"gender1\" /> 5   &nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" value=\"6\" checked={this.state.duration === \"6\"} onChange={this.onChangeDuration}  name=\"gender1\" /> 6   &nbsp;&nbsp;&nbsp;\n\n                    </div>\n                    <br/>\n\n                    <button\n                type=\"submit\"\n                className=\"btn btn-secondary btn-block\"\n                onMouseDown={() => this.setState({ submitCalled: true })}\n              >\n                Add Job\n              </button>\n                </form>\n            </div>\n        )\n\n       \n    }\n}"]},"metadata":{},"sourceType":"module"}